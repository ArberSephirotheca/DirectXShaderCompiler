=== COMMAND ===
/home/t-zheychen/dxc_workspace/DirectXShaderCompiler/build-fuzzer/bin/minihlsl-standalone -o 1 /home/t-zheychen/dxc_workspace/DirectXShaderCompiler/tools/clang/tools/dxc-fuzzer/examples/control_flow_switch_loop.hlsl

=== RETURN CODE ===
0

=== STDOUT ===
MiniHLSL Interpreter
====================
Input file: /home/t-zheychen/dxc_workspace/DirectXShaderCompiler/tools/clang/tools/dxc-fuzzer/examples/control_flow_switch_loop.hlsl
Wave size: 32
Order verification: 1 orderings

Converting HLSL function: main
Found numthreads attribute: [4, 1, 1]
Converting compound statement with 5 child statements
Converting statement: DeclStmt
Converting declaration statement
Declaring variable: laneId
Converting expression: CallExpr
Converting function call to expression: WaveGetLaneIndex
Converting statement: DeclStmt
Converting declaration statement
Declaring variable: result
Converting expression: ImplicitCastExpr
Converting expression: IntegerLiteral
Converting statement: DeclStmt
Converting declaration statement
Declaring variable: i
Converting expression: ImplicitCastExpr
Converting expression: IntegerLiteral
Converting statement: SwitchStmt
Converting switch statement
Converting expression: ImplicitCastExpr
Converting expression: DeclRefExpr
DEBUG: Switch parsing - processing AST node: CaseStmt
DEBUG: Switch parsing - LHS type: ImplicitCastExpr
DEBUG: Switch parsing - found case 0
Converting statement: ForStmt
Converting for statement
Converting expression: ImplicitCastExpr
Converting expression: IntegerLiteral
Converting expression: BinaryOperator
Converting expression: ImplicitCastExpr
Converting expression: DeclRefExpr
Converting expression: ImplicitCastExpr
Converting expression: IntegerLiteral
Converting expression: UnaryOperator
Converting expression: DeclRefExpr
Converting statement: CompoundAssignOperator
Converting compound assignment operator
Converting expression: DeclRefExpr
Converting expression: ImplicitCastExpr
Converting expression: CallExpr
Converting function call to expression: WaveActiveSum
Converting expression: ImplicitCastExpr
Converting expression: DeclRefExpr
DEBUG: Switch parsing - processing AST node: CompoundAssignOperator
Converting statement: CompoundAssignOperator
Converting compound assignment operator
Converting expression: DeclRefExpr
Converting expression: ImplicitCastExpr
Converting expression: CallExpr
Converting function call to expression: WaveActiveSum
Converting expression: IntegerLiteral
DEBUG: Switch parsing - processing AST node: CaseStmt
DEBUG: SwitchStmt::addCase - adding case 0
DEBUG: Switch parsing - LHS type: ImplicitCastExpr
DEBUG: Switch parsing - found case 1
Converting statement: CompoundAssignOperator
Converting compound assignment operator
Converting expression: DeclRefExpr
Converting expression: ImplicitCastExpr
Converting expression: CallExpr
Converting function call to expression: WaveActiveSum
Converting expression: IntegerLiteral
DEBUG: Switch parsing - processing AST node: CaseStmt
DEBUG: SwitchStmt::addCase - adding case 1
DEBUG: Switch parsing - LHS type: ImplicitCastExpr
DEBUG: Switch parsing - found case 2
Converting statement: CompoundAssignOperator
Converting compound assignment operator
Converting expression: DeclRefExpr
Converting expression: ImplicitCastExpr
Converting expression: CallExpr
Converting function call to expression: WaveActiveSum
Converting expression: IntegerLiteral
DEBUG: Switch parsing - processing AST node: CaseStmt
DEBUG: SwitchStmt::addCase - adding case 2
DEBUG: Switch parsing - LHS type: ImplicitCastExpr
DEBUG: Switch parsing - found case 3
Converting statement: CompoundAssignOperator
Converting compound assignment operator
Converting expression: DeclRefExpr
Converting expression: ImplicitCastExpr
Converting expression: CallExpr
Converting function call to expression: WaveActiveSum
Converting expression: IntegerLiteral
DEBUG: Switch parsing - processing AST node: DefaultStmt
DEBUG: Switch parsing - found default case
DEBUG: SwitchStmt::addCase - adding case 3
Converting statement: CompoundAssignOperator
Converting compound assignment operator
Converting expression: DeclRefExpr
Converting expression: ImplicitCastExpr
Converting expression: CallExpr
Converting function call to expression: WaveActiveSum
Converting expression: IntegerLiteral
DEBUG: SwitchStmt::addDefault - adding default case
Converting statement: DeclStmt
Converting declaration statement
Declaring variable: totalSum
Converting expression: CallExpr
Converting function call to expression: WaveActiveSum
Converting expression: ImplicitCastExpr
Converting expression: DeclRefExpr
Converted AST to interpreter program with 5 statements
Thread configuration: [4, 1, 1]

DEBUG: findOrCreateBlockForPath called with 0 waves of unknown lanes
DEBUG: Initializing wave 0 with 4 lanes in initial block 1
DEBUG: markLaneArrived - Lane 0 transitioned from Unknown to Participating in block 1
DEBUG: Lane 0 assigned to block 1
DEBUG: markLaneArrived - Lane 1 transitioned from Unknown to Participating in block 1
DEBUG: Lane 1 assigned to block 1
DEBUG: markLaneArrived - Lane 2 transitioned from Unknown to Participating in block 1
DEBUG: Lane 2 assigned to block 1
DEBUG: markLaneArrived - Lane 3 transitioned from Unknown to Participating in block 1
DEBUG: Lane 3 assigned to block 1
DEBUG: SwitchStmt - Lane 0 starting Result-based switch statement
DEBUG: SwitchStmt - Lane 0 starting fresh execution (pushed to stack depth=1, this=0x504000004910)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 2
DEBUG: addUnknownLane - adding lane 1 to new block 2
DEBUG: addUnknownLane - adding lane 2 to new block 2
DEBUG: addUnknownLane - adding lane 3 to new block 2
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 3
DEBUG: addUnknownLane - adding lane 1 to new block 3
DEBUG: addUnknownLane - adding lane 2 to new block 3
DEBUG: addUnknownLane - adding lane 3 to new block 3
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 4
DEBUG: addUnknownLane - adding lane 1 to new block 4
DEBUG: addUnknownLane - adding lane 2 to new block 4
DEBUG: addUnknownLane - adding lane 3 to new block 4
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 5
DEBUG: addUnknownLane - adding lane 1 to new block 5
DEBUG: addUnknownLane - adding lane 2 to new block 5
DEBUG: addUnknownLane - adding lane 3 to new block 5
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 6
DEBUG: addUnknownLane - adding lane 1 to new block 6
DEBUG: addUnknownLane - adding lane 2 to new block 6
DEBUG: addUnknownLane - adding lane 3 to new block 6
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 7
DEBUG: addUnknownLane - adding lane 1 to new block 7
DEBUG: addUnknownLane - adding lane 2 to new block 7
DEBUG: addUnknownLane - adding lane 3 to new block 7
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 8
DEBUG: addUnknownLane - adding lane 1 to new block 8
DEBUG: addUnknownLane - adding lane 2 to new block 8
DEBUG: addUnknownLane - adding lane 3 to new block 8
DEBUG: SwitchStmt - Created header block 2, 5 case blocks, and merge block 8
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 2
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 2
DEBUG: assignLaneToBlock - BEFORE: block 2 has 0 participating lanes, 0 waiting lanes, 4 unknown lanes (0 1 2 3)
DEBUG: assignLaneToBlock - moving lane 0 from block 1 (type 0) to block 2 (type 7), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 1
DEBUG: assignLaneToBlock - AFTER: block 2 has 1 participating lanes (0), 0 waiting lanes, 3 unknown lanes (1 2 3)
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 2
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 2
DEBUG: SwitchStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 evaluating switch condition (Result-based)
DEBUG: SwitchStmt - Lane 0 evaluating condition for first time
DEBUG: VariableExpr - Lane 0 evaluating variable 'laneId' (Result-based)
DEBUG: VariableExpr - Variable 'laneId' = 0
DEBUG: SwitchStmt - Lane 0 switch condition evaluated to: 0
DEBUG: SwitchStmt - Lane 0 matched case 0 at index 0
DEBUG: SwitchStmt - Lane 0 moving to case block 3 for case 0
DEBUG: SwitchStmt - Lane 0 moving from header to first case block 3 (case 0)
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 3
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 3
DEBUG: assignLaneToBlock - BEFORE: block 3 has 0 participating lanes, 0 waiting lanes, 4 unknown lanes (0 1 2 3)
DEBUG: assignLaneToBlock - moving lane 0 from block 2 (type 7) to block 3 (type 8), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 2
DEBUG: assignLaneToBlock - AFTER: block 3 has 1 participating lanes (0), 0 waiting lanes, 3 unknown lanes (1 2 3)
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 3
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 3
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 0 participating lanes before removal
DEBUG: removeThreadFromAllSets - block 2 has 0 participating lanes after removal
DEBUG: SwitchStmt - Lane 1 starting Result-based switch statement
DEBUG: SwitchStmt - Lane 1 starting fresh execution (pushed to stack depth=1, this=0x504000004910)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 4 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 7 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 8 - not modifying unknown lanes
DEBUG: SwitchStmt - Created header block 2, 5 case blocks, and merge block 8
DEBUG: moveThreadFromUnknownToParticipating - moving lane 1 to block 2
DEBUG: assignLaneToBlock - START: lane 1 being assigned to block 2
DEBUG: assignLaneToBlock - BEFORE: block 2 has 0 participating lanes, 0 waiting lanes, 3 unknown lanes (1 2 3)
DEBUG: assignLaneToBlock - moving lane 1 from block 1 (type 0) to block 2 (type 7), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from block 1
DEBUG: assignLaneToBlock - AFTER: block 2 has 1 participating lanes (1), 0 waiting lanes, 2 unknown lanes (2 3)
DEBUG: assignLaneToBlock - END: lane 1 successfully assigned to block 2
DEBUG: moveThreadFromUnknownToParticipating - lane 1 is now in block 2
DEBUG: SwitchStmt - Lane 1 in phase EvaluatingCondition (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 1 evaluating switch condition (Result-based)
DEBUG: SwitchStmt - Lane 1 evaluating condition for first time
DEBUG: VariableExpr - Lane 1 evaluating variable 'laneId' (Result-based)
DEBUG: VariableExpr - Variable 'laneId' = 1
DEBUG: SwitchStmt - Lane 1 switch condition evaluated to: 1
DEBUG: SwitchStmt - Lane 1 matched case 1 at index 1
DEBUG: SwitchStmt - Lane 1 moving to case block 4 for case 1
DEBUG: SwitchStmt - Lane 1 moving from header to first case block 4 (case 1)
DEBUG: moveThreadFromUnknownToParticipating - moving lane 1 to block 4
DEBUG: assignLaneToBlock - START: lane 1 being assigned to block 4
DEBUG: assignLaneToBlock - BEFORE: block 4 has 0 participating lanes, 0 waiting lanes, 4 unknown lanes (0 1 2 3)
DEBUG: assignLaneToBlock - moving lane 1 from block 2 (type 7) to block 4 (type 8), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from block 2
DEBUG: assignLaneToBlock - AFTER: block 4 has 1 participating lanes (1), 0 waiting lanes, 3 unknown lanes (0 2 3)
DEBUG: assignLaneToBlock - END: lane 1 successfully assigned to block 4
DEBUG: moveThreadFromUnknownToParticipating - lane 1 is now in block 4
DEBUG: SwitchStmt - Lane 1 removing from previous case block 3 (case 0)
DEBUG: removeThreadFromUnknown - removing lane 1 from block 3
DEBUG: Block 3 unknown lanes before removal: {1 2 3}
DEBUG: Block 3 unknown lanes after removal: {2 3}
DEBUG: Block 3 areAllUnknownLanesResolvedForWave(0) = 0 (tracked by registry)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 0 participating lanes before removal
DEBUG: removeThreadFromAllSets - block 2 has 0 participating lanes after removal
DEBUG: SwitchStmt - Lane 2 starting Result-based switch statement
DEBUG: SwitchStmt - Lane 2 starting fresh execution (pushed to stack depth=1, this=0x504000004910)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 4 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 7 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 8 - not modifying unknown lanes
DEBUG: SwitchStmt - Created header block 2, 5 case blocks, and merge block 8
DEBUG: moveThreadFromUnknownToParticipating - moving lane 2 to block 2
DEBUG: assignLaneToBlock - START: lane 2 being assigned to block 2
DEBUG: assignLaneToBlock - BEFORE: block 2 has 0 participating lanes, 0 waiting lanes, 2 unknown lanes (2 3)
DEBUG: assignLaneToBlock - moving lane 2 from block 1 (type 0) to block 2 (type 7), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from block 1
DEBUG: assignLaneToBlock - AFTER: block 2 has 1 participating lanes (2), 0 waiting lanes, 1 unknown lanes (3)
DEBUG: assignLaneToBlock - END: lane 2 successfully assigned to block 2
DEBUG: moveThreadFromUnknownToParticipating - lane 2 is now in block 2
DEBUG: SwitchStmt - Lane 2 in phase EvaluatingCondition (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 2 evaluating switch condition (Result-based)
DEBUG: SwitchStmt - Lane 2 evaluating condition for first time
DEBUG: VariableExpr - Lane 2 evaluating variable 'laneId' (Result-based)
DEBUG: VariableExpr - Variable 'laneId' = 2
DEBUG: SwitchStmt - Lane 2 switch condition evaluated to: 2
DEBUG: SwitchStmt - Lane 2 matched case 2 at index 2
DEBUG: SwitchStmt - Lane 2 moving to case block 5 for case 2
DEBUG: SwitchStmt - Lane 2 moving from header to first case block 5 (case 2)
DEBUG: moveThreadFromUnknownToParticipating - moving lane 2 to block 5
DEBUG: assignLaneToBlock - START: lane 2 being assigned to block 5
DEBUG: assignLaneToBlock - BEFORE: block 5 has 0 participating lanes, 0 waiting lanes, 4 unknown lanes (0 1 2 3)
DEBUG: assignLaneToBlock - moving lane 2 from block 2 (type 7) to block 5 (type 8), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from block 2
DEBUG: assignLaneToBlock - AFTER: block 5 has 1 participating lanes (2), 0 waiting lanes, 3 unknown lanes (0 1 3)
DEBUG: assignLaneToBlock - END: lane 2 successfully assigned to block 5
DEBUG: moveThreadFromUnknownToParticipating - lane 2 is now in block 5
DEBUG: SwitchStmt - Lane 2 removing from previous case block 3 (case 0)
DEBUG: removeThreadFromUnknown - removing lane 2 from block 3
DEBUG: Block 3 unknown lanes before removal: {2 3}
DEBUG: Block 3 unknown lanes after removal: {3}
DEBUG: Block 3 areAllUnknownLanesResolvedForWave(0) = 0 (tracked by registry)
DEBUG: SwitchStmt - Lane 2 removing from previous case block 4 (case 1)
DEBUG: removeThreadFromUnknown - removing lane 2 from block 4
DEBUG: Block 4 unknown lanes before removal: {0 2 3}
DEBUG: Block 4 unknown lanes after removal: {0 3}
DEBUG: Block 4 areAllUnknownLanesResolvedForWave(0) = 0 (tracked by registry)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 0 participating lanes before removal
DEBUG: removeThreadFromAllSets - block 2 has 0 participating lanes after removal
DEBUG: SwitchStmt - Lane 3 starting Result-based switch statement
DEBUG: SwitchStmt - Lane 3 starting fresh execution (pushed to stack depth=1, this=0x504000004910)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 4 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 7 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 8 - not modifying unknown lanes
DEBUG: SwitchStmt - Created header block 2, 5 case blocks, and merge block 8
DEBUG: moveThreadFromUnknownToParticipating - moving lane 3 to block 2
DEBUG: assignLaneToBlock - START: lane 3 being assigned to block 2
DEBUG: assignLaneToBlock - BEFORE: block 2 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (3)
DEBUG: assignLaneToBlock - moving lane 3 from block 1 (type 0) to block 2 (type 7), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from block 1
DEBUG: assignLaneToBlock - AFTER: block 2 has 1 participating lanes (3), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 3 successfully assigned to block 2
DEBUG: moveThreadFromUnknownToParticipating - lane 3 is now in block 2
DEBUG: SwitchStmt - Lane 3 in phase EvaluatingCondition (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 3 evaluating switch condition (Result-based)
DEBUG: SwitchStmt - Lane 3 evaluating condition for first time
DEBUG: VariableExpr - Lane 3 evaluating variable 'laneId' (Result-based)
DEBUG: VariableExpr - Variable 'laneId' = 3
DEBUG: SwitchStmt - Lane 3 switch condition evaluated to: 3
DEBUG: SwitchStmt - Lane 3 matched case 3 at index 3
DEBUG: SwitchStmt - Lane 3 moving to case block 6 for case 3
DEBUG: SwitchStmt - Lane 3 moving from header to first case block 6 (case 3)
DEBUG: moveThreadFromUnknownToParticipating - moving lane 3 to block 6
DEBUG: assignLaneToBlock - START: lane 3 being assigned to block 6
DEBUG: assignLaneToBlock - BEFORE: block 6 has 0 participating lanes, 0 waiting lanes, 4 unknown lanes (0 1 2 3)
DEBUG: assignLaneToBlock - moving lane 3 from block 2 (type 7) to block 6 (type 8), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from block 2
DEBUG: assignLaneToBlock - AFTER: block 6 has 1 participating lanes (3), 0 waiting lanes, 3 unknown lanes (0 1 2)
DEBUG: assignLaneToBlock - END: lane 3 successfully assigned to block 6
DEBUG: moveThreadFromUnknownToParticipating - lane 3 is now in block 6
DEBUG: SwitchStmt - Lane 3 removing from previous case block 3 (case 0)
DEBUG: removeThreadFromUnknown - removing lane 3 from block 3
DEBUG: Block 3 unknown lanes before removal: {3}
DEBUG: Block 3 unknown lanes after removal: {}
DEBUG: Block 3 areAllUnknownLanesResolvedForWave(0) = 1 (tracked by registry)
DEBUG: Block 3 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: SwitchStmt - Lane 3 removing from previous case block 4 (case 1)
DEBUG: removeThreadFromUnknown - removing lane 3 from block 4
DEBUG: Block 4 unknown lanes before removal: {0 3}
DEBUG: Block 4 unknown lanes after removal: {0}
DEBUG: Block 4 areAllUnknownLanesResolvedForWave(0) = 0 (tracked by registry)
DEBUG: SwitchStmt - Lane 3 removing from previous case block 5 (case 2)
DEBUG: removeThreadFromUnknown - removing lane 3 from block 5
DEBUG: Block 5 unknown lanes before removal: {0 1 3}
DEBUG: Block 5 unknown lanes after removal: {0 1}
DEBUG: Block 5 areAllUnknownLanesResolvedForWave(0) = 0 (tracked by registry)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 0 participating lanes before removal
DEBUG: removeThreadFromAllSets - block 2 has 0 participating lanes after removal
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 starting Result-based for loop execution
DEBUG: ForStmt - Lane 0 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 9
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 10
DEBUG: ForStmt - Lane 0 in phase EvaluatingInit (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating init (Result-based)
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 3 (type 8) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 3
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: SwitchStmt - Lane 1 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x504000004910)
DEBUG: SwitchStmt - Lane 1 in phase ExecutingCase (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 1 executing statement 0 in case 1 (Result-based)
DEBUG: BinaryOpExpr - Lane 1 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 1 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 4, instruction key=(0x503000001c00,4)
DEBUG: markLaneWaitingForWave - Lane 1 wave 0 in block 4
DEBUG: markLaneWaitingForWave - Successfully set lane 1 to WaitingForWave in block 4
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 4
DEBUG: WAVE_OP: Resolution status tracked by registry for block 4
DEBUG: Block 4 wave 0 unknown lanes: {0 }
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: canExecuteWaveInstruction for lane 1 in block 4: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: WAVE_WAIT: Lane 1 received WaveOperationWait error, state=2
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 2 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x504000004910)
DEBUG: SwitchStmt - Lane 2 in phase ExecutingCase (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 2 executing statement 0 in case 2 (Result-based)
DEBUG: BinaryOpExpr - Lane 2 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 2 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 5, instruction key=(0x503000001c60,5)
DEBUG: markLaneWaitingForWave - Lane 2 wave 0 in block 5
DEBUG: markLaneWaitingForWave - Successfully set lane 2 to WaitingForWave in block 5
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 5
DEBUG: WAVE_OP: Resolution status tracked by registry for block 5
DEBUG: Block 5 wave 0 unknown lanes: {0 1 }
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: canExecuteWaveInstruction for lane 2 in block 5: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: WAVE_WAIT: Lane 2 received WaveOperationWait error, state=2
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 3 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x504000004910)
DEBUG: SwitchStmt - Lane 3 in phase ExecutingCase (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 3 executing statement 0 in case 3 (Result-based)
DEBUG: BinaryOpExpr - Lane 3 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 3 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 6, instruction key=(0x503000001cc0,6)
DEBUG: markLaneWaitingForWave - Lane 3 wave 0 in block 6
DEBUG: markLaneWaitingForWave - Successfully set lane 3 to WaitingForWave in block 6
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 6
DEBUG: WAVE_OP: Resolution status tracked by registry for block 6
DEBUG: Block 6 wave 0 unknown lanes: {0 1 2 }
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: canExecuteWaveInstruction for lane 3 in block 6: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: WAVE_WAIT: Lane 3 received WaveOperationWait error, state=2
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 0 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 11
DEBUG: ForStmt - Lane 0 created iteration starting block 11 for iteration 0
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 11
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 11
DEBUG: assignLaneToBlock - BEFORE: block 11 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 11 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 11
DEBUG: assignLaneToBlock - AFTER: block 11 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 11
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 11
DEBUG: ForStmt - Lane 0 moved to iteration starting block 11
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 11 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 11, instruction key=(0x503000001b10,11)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 11
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 11
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 11
DEBUG: WAVE_OP: Resolution status tracked by registry for block 11
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: Block 11 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 11: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 11
DEBUG: onLaneFinishWaveOp - Current status in block 11: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 11
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 11 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 11, instruction key=(0x503000001b10,11)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: ForStmt - Lane 0 body completed in block 11, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 11 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 11
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 1 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 12
DEBUG: ForStmt - Lane 0 created iteration starting block 12 for iteration 1
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 12
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 12
DEBUG: assignLaneToBlock - BEFORE: block 12 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 12 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 12
DEBUG: assignLaneToBlock - AFTER: block 12 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 12
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 12
DEBUG: ForStmt - Lane 0 moved to iteration starting block 12
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 12 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 12, instruction key=(0x503000001b10,12)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 12
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 12
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 12
DEBUG: WAVE_OP: Resolution status tracked by registry for block 12
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: Block 12 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 12: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 12
DEBUG: onLaneFinishWaveOp - Current status in block 12: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 12
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 12 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 12, instruction key=(0x503000001b10,12)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: ForStmt - Lane 0 body completed in block 12, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 12 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 12
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 2 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 2 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 13
DEBUG: ForStmt - Lane 0 created iteration starting block 13 for iteration 2
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 13
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 13
DEBUG: assignLaneToBlock - BEFORE: block 13 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 13 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 13
DEBUG: assignLaneToBlock - AFTER: block 13 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 13
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 13
DEBUG: ForStmt - Lane 0 moved to iteration starting block 13
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 13 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 13, instruction key=(0x503000001b10,13)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 13
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 13
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 13
DEBUG: WAVE_OP: Resolution status tracked by registry for block 13
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: Block 13 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 13: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 13
DEBUG: onLaneFinishWaveOp - Current status in block 13: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 13
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 2 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 13 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 13, instruction key=(0x503000001b10,13)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: ForStmt - Lane 0 body completed in block 13, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 13 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 13
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 3 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 3 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 14
DEBUG: ForStmt - Lane 0 created iteration starting block 14 for iteration 3
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 14
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 14
DEBUG: assignLaneToBlock - BEFORE: block 14 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 14 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 14
DEBUG: assignLaneToBlock - AFTER: block 14 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 14
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 14
DEBUG: ForStmt - Lane 0 moved to iteration starting block 14
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 14 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 14, instruction key=(0x503000001b10,14)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 14
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 14
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 14
DEBUG: WAVE_OP: Resolution status tracked by registry for block 14
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: Block 14 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 14: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 14
DEBUG: onLaneFinishWaveOp - Current status in block 14: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 14
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 3 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 14 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 14, instruction key=(0x503000001b10,14)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: ForStmt - Lane 0 body completed in block 14, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 14 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 14
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 4 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 4 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 15
DEBUG: ForStmt - Lane 0 created iteration starting block 15 for iteration 4
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 15
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 15
DEBUG: assignLaneToBlock - BEFORE: block 15 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 15 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 15
DEBUG: assignLaneToBlock - AFTER: block 15 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 15
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 15
DEBUG: ForStmt - Lane 0 moved to iteration starting block 15
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 15 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 15, instruction key=(0x503000001b10,15)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 15
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 15
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 15
DEBUG: WAVE_OP: Resolution status tracked by registry for block 15
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: Block 15 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 15: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 15
DEBUG: onLaneFinishWaveOp - Current status in block 15: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 15
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 4 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 15 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 15, instruction key=(0x503000001b10,15)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: ForStmt - Lane 0 body completed in block 15, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 15 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 15
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 5 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 5 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 16
DEBUG: ForStmt - Lane 0 created iteration starting block 16 for iteration 5
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 16
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 16
DEBUG: assignLaneToBlock - BEFORE: block 16 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 16 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 16
DEBUG: assignLaneToBlock - AFTER: block 16 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 16
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 16
DEBUG: ForStmt - Lane 0 moved to iteration starting block 16
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 16 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 16, instruction key=(0x503000001b10,16)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 16
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 16
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 16
DEBUG: WAVE_OP: Resolution status tracked by registry for block 16
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: Block 16 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 16: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 16
DEBUG: onLaneFinishWaveOp - Current status in block 16: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 16
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 5 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 16 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 16, instruction key=(0x503000001b10,16)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: ForStmt - Lane 0 body completed in block 16, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 16 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 16
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 6 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 6 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 17
DEBUG: ForStmt - Lane 0 created iteration starting block 17 for iteration 6
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 17
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 17
DEBUG: assignLaneToBlock - BEFORE: block 17 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 17 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 17
DEBUG: assignLaneToBlock - AFTER: block 17 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 17
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 17
DEBUG: ForStmt - Lane 0 moved to iteration starting block 17
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 17 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 17, instruction key=(0x503000001b10,17)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 17
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 17
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 17
DEBUG: WAVE_OP: Resolution status tracked by registry for block 17
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: Block 17 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 17: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 17
DEBUG: onLaneFinishWaveOp - Current status in block 17: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 17
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 6 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 17 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 17, instruction key=(0x503000001b10,17)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: ForStmt - Lane 0 body completed in block 17, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 17 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 17
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 7 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 7 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 18
DEBUG: ForStmt - Lane 0 created iteration starting block 18 for iteration 7
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 18
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 18
DEBUG: assignLaneToBlock - BEFORE: block 18 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 18 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 18
DEBUG: assignLaneToBlock - AFTER: block 18 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 18
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 18
DEBUG: ForStmt - Lane 0 moved to iteration starting block 18
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 18 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 18, instruction key=(0x503000001b10,18)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 18
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 18
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 18
DEBUG: WAVE_OP: Resolution status tracked by registry for block 18
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: Block 18 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 18: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 18
DEBUG: onLaneFinishWaveOp - Current status in block 18: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 18
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 7 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 18 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 18, instruction key=(0x503000001b10,18)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: ForStmt - Lane 0 body completed in block 18, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 18 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 18
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 8 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 8 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 19
DEBUG: ForStmt - Lane 0 created iteration starting block 19 for iteration 8
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 19
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 19
DEBUG: assignLaneToBlock - BEFORE: block 19 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 19 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 19
DEBUG: assignLaneToBlock - AFTER: block 19 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 19
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 19
DEBUG: ForStmt - Lane 0 moved to iteration starting block 19
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 19 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 19, instruction key=(0x503000001b10,19)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 19
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 19
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 19
DEBUG: WAVE_OP: Resolution status tracked by registry for block 19
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: Block 19 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 19: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 19
DEBUG: onLaneFinishWaveOp - Current status in block 19: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 19
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 8 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 19 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 19, instruction key=(0x503000001b10,19)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: ForStmt - Lane 0 body completed in block 19, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 19 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 19
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 9 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 9 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 20
DEBUG: ForStmt - Lane 0 created iteration starting block 20 for iteration 9
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 20
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 20
DEBUG: assignLaneToBlock - BEFORE: block 20 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 20 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 20
DEBUG: assignLaneToBlock - AFTER: block 20 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 20
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 20
DEBUG: ForStmt - Lane 0 moved to iteration starting block 20
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 20 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 20, instruction key=(0x503000001b10,20)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 20
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 20
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 20
DEBUG: WAVE_OP: Resolution status tracked by registry for block 20
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: Block 20 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 20: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 20
DEBUG: onLaneFinishWaveOp - Current status in block 20: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 20
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 9 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 20 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 20, instruction key=(0x503000001b10,20)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: ForStmt - Lane 0 body completed in block 20, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 20 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 20
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 10 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 10 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 21
DEBUG: ForStmt - Lane 0 created iteration starting block 21 for iteration 10
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 21
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 21
DEBUG: assignLaneToBlock - BEFORE: block 21 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 21 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 21
DEBUG: assignLaneToBlock - AFTER: block 21 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 21
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 21
DEBUG: ForStmt - Lane 0 moved to iteration starting block 21
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 21 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 21, instruction key=(0x503000001b10,21)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 21
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 21
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 21
DEBUG: WAVE_OP: Resolution status tracked by registry for block 21
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: Block 21 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 21: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 21
DEBUG: onLaneFinishWaveOp - Current status in block 21: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 21
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 10 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 21 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 21, instruction key=(0x503000001b10,21)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: ForStmt - Lane 0 body completed in block 21, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 21 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 21
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 11 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 11 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 22
DEBUG: ForStmt - Lane 0 created iteration starting block 22 for iteration 11
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 22
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 22
DEBUG: assignLaneToBlock - BEFORE: block 22 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 22 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 22
DEBUG: assignLaneToBlock - AFTER: block 22 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 22
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 22
DEBUG: ForStmt - Lane 0 moved to iteration starting block 22
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 22 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 22, instruction key=(0x503000001b10,22)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 22
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 22
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 22
DEBUG: WAVE_OP: Resolution status tracked by registry for block 22
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: Block 22 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 22: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 22
DEBUG: onLaneFinishWaveOp - Current status in block 22: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 22
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 11 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 22 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 22, instruction key=(0x503000001b10,22)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: ForStmt - Lane 0 body completed in block 22, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 22 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 22
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 12 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 12 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 23
DEBUG: ForStmt - Lane 0 created iteration starting block 23 for iteration 12
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 23
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 23
DEBUG: assignLaneToBlock - BEFORE: block 23 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 23 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 23
DEBUG: assignLaneToBlock - AFTER: block 23 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 23
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 23
DEBUG: ForStmt - Lane 0 moved to iteration starting block 23
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 23 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 23, instruction key=(0x503000001b10,23)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 23
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 23
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 23
DEBUG: WAVE_OP: Resolution status tracked by registry for block 23
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: Block 23 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 23: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 23
DEBUG: onLaneFinishWaveOp - Current status in block 23: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 23
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 12 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 23 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 23, instruction key=(0x503000001b10,23)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: ForStmt - Lane 0 body completed in block 23, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 23 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 23
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 13 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 13 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 24
DEBUG: ForStmt - Lane 0 created iteration starting block 24 for iteration 13
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 24
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 24
DEBUG: assignLaneToBlock - BEFORE: block 24 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 24 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 24
DEBUG: assignLaneToBlock - AFTER: block 24 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 24
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 24
DEBUG: ForStmt - Lane 0 moved to iteration starting block 24
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 24 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 24, instruction key=(0x503000001b10,24)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 24
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 24
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 24
DEBUG: WAVE_OP: Resolution status tracked by registry for block 24
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: Block 24 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 24: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 24
DEBUG: onLaneFinishWaveOp - Current status in block 24: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 24
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 13 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 24 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 24, instruction key=(0x503000001b10,24)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: ForStmt - Lane 0 body completed in block 24, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 24 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 24
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 14 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 14 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 25
DEBUG: ForStmt - Lane 0 created iteration starting block 25 for iteration 14
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 25
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 25
DEBUG: assignLaneToBlock - BEFORE: block 25 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 25 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 25
DEBUG: assignLaneToBlock - AFTER: block 25 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 25
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 25
DEBUG: ForStmt - Lane 0 moved to iteration starting block 25
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 25 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 25, instruction key=(0x503000001b10,25)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 25
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 25
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 25
DEBUG: WAVE_OP: Resolution status tracked by registry for block 25
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: Block 25 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 25: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 25
DEBUG: onLaneFinishWaveOp - Current status in block 25: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 25
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 14 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 25 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 25, instruction key=(0x503000001b10,25)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: ForStmt - Lane 0 body completed in block 25, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 25 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 25
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 15 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 15 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 26
DEBUG: ForStmt - Lane 0 created iteration starting block 26 for iteration 15
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 26
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 26
DEBUG: assignLaneToBlock - BEFORE: block 26 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 26 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 26
DEBUG: assignLaneToBlock - AFTER: block 26 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 26
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 26
DEBUG: ForStmt - Lane 0 moved to iteration starting block 26
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 26 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 26, instruction key=(0x503000001b10,26)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 26
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 26
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 26
DEBUG: WAVE_OP: Resolution status tracked by registry for block 26
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: Block 26 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 26: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 26
DEBUG: onLaneFinishWaveOp - Current status in block 26: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 26
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 15 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 26 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 26, instruction key=(0x503000001b10,26)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: ForStmt - Lane 0 body completed in block 26, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 26 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 26
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 16 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 16 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 27
DEBUG: ForStmt - Lane 0 created iteration starting block 27 for iteration 16
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 27
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 27
DEBUG: assignLaneToBlock - BEFORE: block 27 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 27 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 27
DEBUG: assignLaneToBlock - AFTER: block 27 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 27
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 27
DEBUG: ForStmt - Lane 0 moved to iteration starting block 27
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 27 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 27, instruction key=(0x503000001b10,27)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 27
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 27
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 27
DEBUG: WAVE_OP: Resolution status tracked by registry for block 27
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: Block 27 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 27: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 27
DEBUG: onLaneFinishWaveOp - Current status in block 27: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 27
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 16 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 27 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 27, instruction key=(0x503000001b10,27)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: ForStmt - Lane 0 body completed in block 27, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 27 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 27
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 17 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 17 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 28
DEBUG: ForStmt - Lane 0 created iteration starting block 28 for iteration 17
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 28
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 28
DEBUG: assignLaneToBlock - BEFORE: block 28 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 28 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 28
DEBUG: assignLaneToBlock - AFTER: block 28 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 28
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 28
DEBUG: ForStmt - Lane 0 moved to iteration starting block 28
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 28 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 28, instruction key=(0x503000001b10,28)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 28
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 28
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 28
DEBUG: WAVE_OP: Resolution status tracked by registry for block 28
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: Block 28 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 28: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 28
DEBUG: onLaneFinishWaveOp - Current status in block 28: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 28
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 17 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 28 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 28, instruction key=(0x503000001b10,28)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: ForStmt - Lane 0 body completed in block 28, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 28 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 28
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 18 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 18 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 29
DEBUG: ForStmt - Lane 0 created iteration starting block 29 for iteration 18
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 29
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 29
DEBUG: assignLaneToBlock - BEFORE: block 29 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 29 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 29
DEBUG: assignLaneToBlock - AFTER: block 29 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 29
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 29
DEBUG: ForStmt - Lane 0 moved to iteration starting block 29
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 29 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 29, instruction key=(0x503000001b10,29)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 29
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 29
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 29
DEBUG: WAVE_OP: Resolution status tracked by registry for block 29
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: Block 29 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 29: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 29
DEBUG: onLaneFinishWaveOp - Current status in block 29: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 29
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 18 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 29 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 29, instruction key=(0x503000001b10,29)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: ForStmt - Lane 0 body completed in block 29, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 29 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 29
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 19 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 19 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 30
DEBUG: ForStmt - Lane 0 created iteration starting block 30 for iteration 19
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 30
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 30
DEBUG: assignLaneToBlock - BEFORE: block 30 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 30 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 30
DEBUG: assignLaneToBlock - AFTER: block 30 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 30
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 30
DEBUG: ForStmt - Lane 0 moved to iteration starting block 30
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 30 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 30, instruction key=(0x503000001b10,30)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 30
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 30
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 30
DEBUG: WAVE_OP: Resolution status tracked by registry for block 30
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: Block 30 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 30: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 30
DEBUG: onLaneFinishWaveOp - Current status in block 30: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 30
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 19 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 30 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 30, instruction key=(0x503000001b10,30)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: ForStmt - Lane 0 body completed in block 30, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 30 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 30
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 20 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 20 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 31
DEBUG: ForStmt - Lane 0 created iteration starting block 31 for iteration 20
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 31
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 31
DEBUG: assignLaneToBlock - BEFORE: block 31 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 31 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 31
DEBUG: assignLaneToBlock - AFTER: block 31 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 31
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 31
DEBUG: ForStmt - Lane 0 moved to iteration starting block 31
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 31 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 31, instruction key=(0x503000001b10,31)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 31
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 31
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 31
DEBUG: WAVE_OP: Resolution status tracked by registry for block 31
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: Block 31 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 31: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 31
DEBUG: onLaneFinishWaveOp - Current status in block 31: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 31
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 20 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 31 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 31, instruction key=(0x503000001b10,31)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: ForStmt - Lane 0 body completed in block 31, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 31 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 31
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 21 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 21 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 32
DEBUG: ForStmt - Lane 0 created iteration starting block 32 for iteration 21
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 32
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 32
DEBUG: assignLaneToBlock - BEFORE: block 32 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 32 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 32
DEBUG: assignLaneToBlock - AFTER: block 32 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 32
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 32
DEBUG: ForStmt - Lane 0 moved to iteration starting block 32
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 32 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 32, instruction key=(0x503000001b10,32)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 32
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 32
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 32
DEBUG: WAVE_OP: Resolution status tracked by registry for block 32
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: Block 32 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 32: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 32
DEBUG: onLaneFinishWaveOp - Current status in block 32: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 32
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 21 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 32 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 32, instruction key=(0x503000001b10,32)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: ForStmt - Lane 0 body completed in block 32, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 32 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 32
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 22 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 22 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 33
DEBUG: ForStmt - Lane 0 created iteration starting block 33 for iteration 22
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 33
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 33
DEBUG: assignLaneToBlock - BEFORE: block 33 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 33 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 33
DEBUG: assignLaneToBlock - AFTER: block 33 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 33
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 33
DEBUG: ForStmt - Lane 0 moved to iteration starting block 33
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 33 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 33, instruction key=(0x503000001b10,33)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 33
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 33
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 33
DEBUG: WAVE_OP: Resolution status tracked by registry for block 33
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: Block 33 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 33: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 33
DEBUG: onLaneFinishWaveOp - Current status in block 33: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 33
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 22 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 33 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 33, instruction key=(0x503000001b10,33)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: ForStmt - Lane 0 body completed in block 33, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 33 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 33
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 23 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 23 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 34
DEBUG: ForStmt - Lane 0 created iteration starting block 34 for iteration 23
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 34
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 34
DEBUG: assignLaneToBlock - BEFORE: block 34 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 34 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 34
DEBUG: assignLaneToBlock - AFTER: block 34 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 34
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 34
DEBUG: ForStmt - Lane 0 moved to iteration starting block 34
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 34 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 34, instruction key=(0x503000001b10,34)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 34
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 34
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 34
DEBUG: WAVE_OP: Resolution status tracked by registry for block 34
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: Block 34 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 34: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 34
DEBUG: onLaneFinishWaveOp - Current status in block 34: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 34
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 23 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 34 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 34, instruction key=(0x503000001b10,34)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: ForStmt - Lane 0 body completed in block 34, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 34 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 34
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 24 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 24 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 35
DEBUG: ForStmt - Lane 0 created iteration starting block 35 for iteration 24
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 35
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 35
DEBUG: assignLaneToBlock - BEFORE: block 35 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 35 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 35
DEBUG: assignLaneToBlock - AFTER: block 35 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 35
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 35
DEBUG: ForStmt - Lane 0 moved to iteration starting block 35
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 35 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 35, instruction key=(0x503000001b10,35)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 35
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 35
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 35
DEBUG: WAVE_OP: Resolution status tracked by registry for block 35
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: Block 35 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 35: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 35
DEBUG: onLaneFinishWaveOp - Current status in block 35: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 35
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 24 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 35 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 35, instruction key=(0x503000001b10,35)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: ForStmt - Lane 0 body completed in block 35, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 35 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 35
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 25 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 25 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 36
DEBUG: ForStmt - Lane 0 created iteration starting block 36 for iteration 25
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 36
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 36
DEBUG: assignLaneToBlock - BEFORE: block 36 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 36 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 36
DEBUG: assignLaneToBlock - AFTER: block 36 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 36
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 36
DEBUG: ForStmt - Lane 0 moved to iteration starting block 36
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 36 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 36, instruction key=(0x503000001b10,36)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 36
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 36
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 36
DEBUG: WAVE_OP: Resolution status tracked by registry for block 36
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: Block 36 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 36: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 36
DEBUG: onLaneFinishWaveOp - Current status in block 36: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 36
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 25 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 36 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 36, instruction key=(0x503000001b10,36)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: ForStmt - Lane 0 body completed in block 36, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 36 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 36
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 26 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 26 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 37
DEBUG: ForStmt - Lane 0 created iteration starting block 37 for iteration 26
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 37
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 37
DEBUG: assignLaneToBlock - BEFORE: block 37 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 37 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 37
DEBUG: assignLaneToBlock - AFTER: block 37 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 37
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 37
DEBUG: ForStmt - Lane 0 moved to iteration starting block 37
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 37 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 37, instruction key=(0x503000001b10,37)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 37
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 37
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 37
DEBUG: WAVE_OP: Resolution status tracked by registry for block 37
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: Block 37 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 37: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 37
DEBUG: onLaneFinishWaveOp - Current status in block 37: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 37
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 26 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 37 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 37, instruction key=(0x503000001b10,37)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: ForStmt - Lane 0 body completed in block 37, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 37 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 37
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 27 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 27 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 38
DEBUG: ForStmt - Lane 0 created iteration starting block 38 for iteration 27
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 38
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 38
DEBUG: assignLaneToBlock - BEFORE: block 38 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 38 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 38
DEBUG: assignLaneToBlock - AFTER: block 38 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 38
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 38
DEBUG: ForStmt - Lane 0 moved to iteration starting block 38
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 38 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 38, instruction key=(0x503000001b10,38)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 38
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 38
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 38
DEBUG: WAVE_OP: Resolution status tracked by registry for block 38
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: Block 38 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 38: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 38
DEBUG: onLaneFinishWaveOp - Current status in block 38: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 38
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 27 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 38 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 38, instruction key=(0x503000001b10,38)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: ForStmt - Lane 0 body completed in block 38, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 38 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 38
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 28 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 28 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 39
DEBUG: ForStmt - Lane 0 created iteration starting block 39 for iteration 28
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 39
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 39
DEBUG: assignLaneToBlock - BEFORE: block 39 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 39 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 39
DEBUG: assignLaneToBlock - AFTER: block 39 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 39
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 39
DEBUG: ForStmt - Lane 0 moved to iteration starting block 39
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 39 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 39, instruction key=(0x503000001b10,39)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 39
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 39
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 39
DEBUG: WAVE_OP: Resolution status tracked by registry for block 39
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: Block 39 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 39: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 39
DEBUG: onLaneFinishWaveOp - Current status in block 39: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 39
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 28 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 39 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 39, instruction key=(0x503000001b10,39)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: ForStmt - Lane 0 body completed in block 39, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 39 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 39
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 29 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 29 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 40
DEBUG: ForStmt - Lane 0 created iteration starting block 40 for iteration 29
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 40
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 40
DEBUG: assignLaneToBlock - BEFORE: block 40 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 40 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 40
DEBUG: assignLaneToBlock - AFTER: block 40 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 40
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 40
DEBUG: ForStmt - Lane 0 moved to iteration starting block 40
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 40 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 40, instruction key=(0x503000001b10,40)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 40
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 40
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 40
DEBUG: WAVE_OP: Resolution status tracked by registry for block 40
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: Block 40 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 40: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 40
DEBUG: onLaneFinishWaveOp - Current status in block 40: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 40
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 29 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 40 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 40, instruction key=(0x503000001b10,40)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: ForStmt - Lane 0 body completed in block 40, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 40 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 40
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 30 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 30 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 41
DEBUG: ForStmt - Lane 0 created iteration starting block 41 for iteration 30
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 41
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 41
DEBUG: assignLaneToBlock - BEFORE: block 41 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 41 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 41
DEBUG: assignLaneToBlock - AFTER: block 41 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 41
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 41
DEBUG: ForStmt - Lane 0 moved to iteration starting block 41
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 41 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 41, instruction key=(0x503000001b10,41)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 41
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 41
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 41
DEBUG: WAVE_OP: Resolution status tracked by registry for block 41
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: Block 41 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 41: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 41
DEBUG: onLaneFinishWaveOp - Current status in block 41: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 41
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 30 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 41 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 41, instruction key=(0x503000001b10,41)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: ForStmt - Lane 0 body completed in block 41, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 41 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 41
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 31 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 31 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 42
DEBUG: ForStmt - Lane 0 created iteration starting block 42 for iteration 31
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 42
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 42
DEBUG: assignLaneToBlock - BEFORE: block 42 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 42 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 42
DEBUG: assignLaneToBlock - AFTER: block 42 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 42
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 42
DEBUG: ForStmt - Lane 0 moved to iteration starting block 42
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 42 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 42, instruction key=(0x503000001b10,42)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 42
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 42
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 42
DEBUG: WAVE_OP: Resolution status tracked by registry for block 42
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: Block 42 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 42: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 42
DEBUG: onLaneFinishWaveOp - Current status in block 42: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 42
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 31 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 42 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 42, instruction key=(0x503000001b10,42)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: ForStmt - Lane 0 body completed in block 42, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 42 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 42
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 32 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 32 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 43
DEBUG: ForStmt - Lane 0 created iteration starting block 43 for iteration 32
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 43
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 43
DEBUG: assignLaneToBlock - BEFORE: block 43 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 43 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 43
DEBUG: assignLaneToBlock - AFTER: block 43 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 43
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 43
DEBUG: ForStmt - Lane 0 moved to iteration starting block 43
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 43 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 43, instruction key=(0x503000001b10,43)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 43
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 43
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 43
DEBUG: WAVE_OP: Resolution status tracked by registry for block 43
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: Block 43 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 43: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 43
DEBUG: onLaneFinishWaveOp - Current status in block 43: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 43
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 32 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 43 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 43, instruction key=(0x503000001b10,43)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: ForStmt - Lane 0 body completed in block 43, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 43 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 43
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 33 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 33 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 44
DEBUG: ForStmt - Lane 0 created iteration starting block 44 for iteration 33
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 44
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 44
DEBUG: assignLaneToBlock - BEFORE: block 44 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 44 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 44
DEBUG: assignLaneToBlock - AFTER: block 44 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 44
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 44
DEBUG: ForStmt - Lane 0 moved to iteration starting block 44
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 44 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 44, instruction key=(0x503000001b10,44)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 44
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 44
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 44
DEBUG: WAVE_OP: Resolution status tracked by registry for block 44
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: Block 44 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 44: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 44
DEBUG: onLaneFinishWaveOp - Current status in block 44: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 44
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 33 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 44 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 44, instruction key=(0x503000001b10,44)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: ForStmt - Lane 0 body completed in block 44, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 44 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 44
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 34 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 34 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 45
DEBUG: ForStmt - Lane 0 created iteration starting block 45 for iteration 34
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 45
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 45
DEBUG: assignLaneToBlock - BEFORE: block 45 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 45 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 45
DEBUG: assignLaneToBlock - AFTER: block 45 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 45
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 45
DEBUG: ForStmt - Lane 0 moved to iteration starting block 45
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 45 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 45, instruction key=(0x503000001b10,45)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 45
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 45
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 45
DEBUG: WAVE_OP: Resolution status tracked by registry for block 45
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: Block 45 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 45: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 45
DEBUG: onLaneFinishWaveOp - Current status in block 45: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 45
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 34 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 45 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 45, instruction key=(0x503000001b10,45)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: ForStmt - Lane 0 body completed in block 45, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 45 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 45
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 35 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 35 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 46
DEBUG: ForStmt - Lane 0 created iteration starting block 46 for iteration 35
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 46
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 46
DEBUG: assignLaneToBlock - BEFORE: block 46 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 46 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 46
DEBUG: assignLaneToBlock - AFTER: block 46 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 46
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 46
DEBUG: ForStmt - Lane 0 moved to iteration starting block 46
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 46 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 46, instruction key=(0x503000001b10,46)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 46
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 46
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 46
DEBUG: WAVE_OP: Resolution status tracked by registry for block 46
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: Block 46 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 46: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 46
DEBUG: onLaneFinishWaveOp - Current status in block 46: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 46
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 35 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 46 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 46, instruction key=(0x503000001b10,46)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: ForStmt - Lane 0 body completed in block 46, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 46 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 46
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
=== Sequential Execution ===
❌ Execution failed: Execution timeout: possible infinite loop or deadlock
DEBUG: findOrCreateBlockForPath called with 0 waves of unknown lanes
DEBUG: Initializing wave 0 with 4 lanes in initial block 1
DEBUG: markLaneArrived - Lane 0 transitioned from Unknown to Participating in block 1
DEBUG: Lane 0 assigned to block 1
DEBUG: markLaneArrived - Lane 1 transitioned from Unknown to Participating in block 1
DEBUG: Lane 1 assigned to block 1
DEBUG: markLaneArrived - Lane 2 transitioned from Unknown to Participating in block 1
DEBUG: Lane 2 assigned to block 1
DEBUG: markLaneArrived - Lane 3 transitioned from Unknown to Participating in block 1
DEBUG: Lane 3 assigned to block 1
DEBUG: SwitchStmt - Lane 0 starting Result-based switch statement
DEBUG: SwitchStmt - Lane 0 starting fresh execution (pushed to stack depth=1, this=0x504000004910)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 2
DEBUG: addUnknownLane - adding lane 1 to new block 2
DEBUG: addUnknownLane - adding lane 2 to new block 2
DEBUG: addUnknownLane - adding lane 3 to new block 2
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 3
DEBUG: addUnknownLane - adding lane 1 to new block 3
DEBUG: addUnknownLane - adding lane 2 to new block 3
DEBUG: addUnknownLane - adding lane 3 to new block 3
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 4
DEBUG: addUnknownLane - adding lane 1 to new block 4
DEBUG: addUnknownLane - adding lane 2 to new block 4
DEBUG: addUnknownLane - adding lane 3 to new block 4
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 5
DEBUG: addUnknownLane - adding lane 1 to new block 5
DEBUG: addUnknownLane - adding lane 2 to new block 5
DEBUG: addUnknownLane - adding lane 3 to new block 5
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 6
DEBUG: addUnknownLane - adding lane 1 to new block 6
DEBUG: addUnknownLane - adding lane 2 to new block 6
DEBUG: addUnknownLane - adding lane 3 to new block 6
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 7
DEBUG: addUnknownLane - adding lane 1 to new block 7
DEBUG: addUnknownLane - adding lane 2 to new block 7
DEBUG: addUnknownLane - adding lane 3 to new block 7
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 8
DEBUG: addUnknownLane - adding lane 1 to new block 8
DEBUG: addUnknownLane - adding lane 2 to new block 8
DEBUG: addUnknownLane - adding lane 3 to new block 8
DEBUG: SwitchStmt - Created header block 2, 5 case blocks, and merge block 8
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 2
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 2
DEBUG: assignLaneToBlock - BEFORE: block 2 has 0 participating lanes, 0 waiting lanes, 4 unknown lanes (0 1 2 3)
DEBUG: assignLaneToBlock - moving lane 0 from block 1 (type 0) to block 2 (type 7), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 1
DEBUG: assignLaneToBlock - AFTER: block 2 has 1 participating lanes (0), 0 waiting lanes, 3 unknown lanes (1 2 3)
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 2
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 2
DEBUG: SwitchStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 evaluating switch condition (Result-based)
DEBUG: SwitchStmt - Lane 0 evaluating condition for first time
DEBUG: VariableExpr - Lane 0 evaluating variable 'laneId' (Result-based)
DEBUG: VariableExpr - Variable 'laneId' = 0
DEBUG: SwitchStmt - Lane 0 switch condition evaluated to: 0
DEBUG: SwitchStmt - Lane 0 matched case 0 at index 0
DEBUG: SwitchStmt - Lane 0 moving to case block 3 for case 0
DEBUG: SwitchStmt - Lane 0 moving from header to first case block 3 (case 0)
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 3
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 3
DEBUG: assignLaneToBlock - BEFORE: block 3 has 0 participating lanes, 0 waiting lanes, 4 unknown lanes (0 1 2 3)
DEBUG: assignLaneToBlock - moving lane 0 from block 2 (type 7) to block 3 (type 8), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 2
DEBUG: assignLaneToBlock - AFTER: block 3 has 1 participating lanes (0), 0 waiting lanes, 3 unknown lanes (1 2 3)
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 3
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 3
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 0 participating lanes before removal
DEBUG: removeThreadFromAllSets - block 2 has 0 participating lanes after removal
DEBUG: SwitchStmt - Lane 1 starting Result-based switch statement
DEBUG: SwitchStmt - Lane 1 starting fresh execution (pushed to stack depth=1, this=0x504000004910)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 4 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 7 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {1 2 3 } (3 lanes)
DEBUG: Found existing block 8 - not modifying unknown lanes
DEBUG: SwitchStmt - Created header block 2, 5 case blocks, and merge block 8
DEBUG: moveThreadFromUnknownToParticipating - moving lane 1 to block 2
DEBUG: assignLaneToBlock - START: lane 1 being assigned to block 2
DEBUG: assignLaneToBlock - BEFORE: block 2 has 0 participating lanes, 0 waiting lanes, 3 unknown lanes (1 2 3)
DEBUG: assignLaneToBlock - moving lane 1 from block 1 (type 0) to block 2 (type 7), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from block 1
DEBUG: assignLaneToBlock - AFTER: block 2 has 1 participating lanes (1), 0 waiting lanes, 2 unknown lanes (2 3)
DEBUG: assignLaneToBlock - END: lane 1 successfully assigned to block 2
DEBUG: moveThreadFromUnknownToParticipating - lane 1 is now in block 2
DEBUG: SwitchStmt - Lane 1 in phase EvaluatingCondition (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 1 evaluating switch condition (Result-based)
DEBUG: SwitchStmt - Lane 1 evaluating condition for first time
DEBUG: VariableExpr - Lane 1 evaluating variable 'laneId' (Result-based)
DEBUG: VariableExpr - Variable 'laneId' = 1
DEBUG: SwitchStmt - Lane 1 switch condition evaluated to: 1
DEBUG: SwitchStmt - Lane 1 matched case 1 at index 1
DEBUG: SwitchStmt - Lane 1 moving to case block 4 for case 1
DEBUG: SwitchStmt - Lane 1 moving from header to first case block 4 (case 1)
DEBUG: moveThreadFromUnknownToParticipating - moving lane 1 to block 4
DEBUG: assignLaneToBlock - START: lane 1 being assigned to block 4
DEBUG: assignLaneToBlock - BEFORE: block 4 has 0 participating lanes, 0 waiting lanes, 4 unknown lanes (0 1 2 3)
DEBUG: assignLaneToBlock - moving lane 1 from block 2 (type 7) to block 4 (type 8), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from block 2
DEBUG: assignLaneToBlock - AFTER: block 4 has 1 participating lanes (1), 0 waiting lanes, 3 unknown lanes (0 2 3)
DEBUG: assignLaneToBlock - END: lane 1 successfully assigned to block 4
DEBUG: moveThreadFromUnknownToParticipating - lane 1 is now in block 4
DEBUG: SwitchStmt - Lane 1 removing from previous case block 3 (case 0)
DEBUG: removeThreadFromUnknown - removing lane 1 from block 3
DEBUG: Block 3 unknown lanes before removal: {1 2 3}
DEBUG: Block 3 unknown lanes after removal: {2 3}
DEBUG: Block 3 areAllUnknownLanesResolvedForWave(0) = 0 (tracked by registry)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 0 participating lanes before removal
DEBUG: removeThreadFromAllSets - block 2 has 0 participating lanes after removal
DEBUG: SwitchStmt - Lane 2 starting Result-based switch statement
DEBUG: SwitchStmt - Lane 2 starting fresh execution (pushed to stack depth=1, this=0x504000004910)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 4 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 7 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {2 3 } (2 lanes)
DEBUG: Found existing block 8 - not modifying unknown lanes
DEBUG: SwitchStmt - Created header block 2, 5 case blocks, and merge block 8
DEBUG: moveThreadFromUnknownToParticipating - moving lane 2 to block 2
DEBUG: assignLaneToBlock - START: lane 2 being assigned to block 2
DEBUG: assignLaneToBlock - BEFORE: block 2 has 0 participating lanes, 0 waiting lanes, 2 unknown lanes (2 3)
DEBUG: assignLaneToBlock - moving lane 2 from block 1 (type 0) to block 2 (type 7), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from block 1
DEBUG: assignLaneToBlock - AFTER: block 2 has 1 participating lanes (2), 0 waiting lanes, 1 unknown lanes (3)
DEBUG: assignLaneToBlock - END: lane 2 successfully assigned to block 2
DEBUG: moveThreadFromUnknownToParticipating - lane 2 is now in block 2
DEBUG: SwitchStmt - Lane 2 in phase EvaluatingCondition (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 2 evaluating switch condition (Result-based)
DEBUG: SwitchStmt - Lane 2 evaluating condition for first time
DEBUG: VariableExpr - Lane 2 evaluating variable 'laneId' (Result-based)
DEBUG: VariableExpr - Variable 'laneId' = 2
DEBUG: SwitchStmt - Lane 2 switch condition evaluated to: 2
DEBUG: SwitchStmt - Lane 2 matched case 2 at index 2
DEBUG: SwitchStmt - Lane 2 moving to case block 5 for case 2
DEBUG: SwitchStmt - Lane 2 moving from header to first case block 5 (case 2)
DEBUG: moveThreadFromUnknownToParticipating - moving lane 2 to block 5
DEBUG: assignLaneToBlock - START: lane 2 being assigned to block 5
DEBUG: assignLaneToBlock - BEFORE: block 5 has 0 participating lanes, 0 waiting lanes, 4 unknown lanes (0 1 2 3)
DEBUG: assignLaneToBlock - moving lane 2 from block 2 (type 7) to block 5 (type 8), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from block 2
DEBUG: assignLaneToBlock - AFTER: block 5 has 1 participating lanes (2), 0 waiting lanes, 3 unknown lanes (0 1 3)
DEBUG: assignLaneToBlock - END: lane 2 successfully assigned to block 5
DEBUG: moveThreadFromUnknownToParticipating - lane 2 is now in block 5
DEBUG: SwitchStmt - Lane 2 removing from previous case block 3 (case 0)
DEBUG: removeThreadFromUnknown - removing lane 2 from block 3
DEBUG: Block 3 unknown lanes before removal: {2 3}
DEBUG: Block 3 unknown lanes after removal: {3}
DEBUG: Block 3 areAllUnknownLanesResolvedForWave(0) = 0 (tracked by registry)
DEBUG: SwitchStmt - Lane 2 removing from previous case block 4 (case 1)
DEBUG: removeThreadFromUnknown - removing lane 2 from block 4
DEBUG: Block 4 unknown lanes before removal: {0 2 3}
DEBUG: Block 4 unknown lanes after removal: {0 3}
DEBUG: Block 4 areAllUnknownLanesResolvedForWave(0) = 0 (tracked by registry)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 0 participating lanes before removal
DEBUG: removeThreadFromAllSets - block 2 has 0 participating lanes after removal
DEBUG: SwitchStmt - Lane 3 starting Result-based switch statement
DEBUG: SwitchStmt - Lane 3 starting fresh execution (pushed to stack depth=1, this=0x504000004910)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 4 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 7 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {3 } (1 lanes)
DEBUG: Found existing block 8 - not modifying unknown lanes
DEBUG: SwitchStmt - Created header block 2, 5 case blocks, and merge block 8
DEBUG: moveThreadFromUnknownToParticipating - moving lane 3 to block 2
DEBUG: assignLaneToBlock - START: lane 3 being assigned to block 2
DEBUG: assignLaneToBlock - BEFORE: block 2 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (3)
DEBUG: assignLaneToBlock - moving lane 3 from block 1 (type 0) to block 2 (type 7), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from block 1
DEBUG: assignLaneToBlock - AFTER: block 2 has 1 participating lanes (3), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 3 successfully assigned to block 2
DEBUG: moveThreadFromUnknownToParticipating - lane 3 is now in block 2
DEBUG: SwitchStmt - Lane 3 in phase EvaluatingCondition (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 3 evaluating switch condition (Result-based)
DEBUG: SwitchStmt - Lane 3 evaluating condition for first time
DEBUG: VariableExpr - Lane 3 evaluating variable 'laneId' (Result-based)
DEBUG: VariableExpr - Variable 'laneId' = 3
DEBUG: SwitchStmt - Lane 3 switch condition evaluated to: 3
DEBUG: SwitchStmt - Lane 3 matched case 3 at index 3
DEBUG: SwitchStmt - Lane 3 moving to case block 6 for case 3
DEBUG: SwitchStmt - Lane 3 moving from header to first case block 6 (case 3)
DEBUG: moveThreadFromUnknownToParticipating - moving lane 3 to block 6
DEBUG: assignLaneToBlock - START: lane 3 being assigned to block 6
DEBUG: assignLaneToBlock - BEFORE: block 6 has 0 participating lanes, 0 waiting lanes, 4 unknown lanes (0 1 2 3)
DEBUG: assignLaneToBlock - moving lane 3 from block 2 (type 7) to block 6 (type 8), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from block 2
DEBUG: assignLaneToBlock - AFTER: block 6 has 1 participating lanes (3), 0 waiting lanes, 3 unknown lanes (0 1 2)
DEBUG: assignLaneToBlock - END: lane 3 successfully assigned to block 6
DEBUG: moveThreadFromUnknownToParticipating - lane 3 is now in block 6
DEBUG: SwitchStmt - Lane 3 removing from previous case block 3 (case 0)
DEBUG: removeThreadFromUnknown - removing lane 3 from block 3
DEBUG: Block 3 unknown lanes before removal: {3}
DEBUG: Block 3 unknown lanes after removal: {}
DEBUG: Block 3 areAllUnknownLanesResolvedForWave(0) = 1 (tracked by registry)
DEBUG: Block 3 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: SwitchStmt - Lane 3 removing from previous case block 4 (case 1)
DEBUG: removeThreadFromUnknown - removing lane 3 from block 4
DEBUG: Block 4 unknown lanes before removal: {0 3}
DEBUG: Block 4 unknown lanes after removal: {0}
DEBUG: Block 4 areAllUnknownLanesResolvedForWave(0) = 0 (tracked by registry)
DEBUG: SwitchStmt - Lane 3 removing from previous case block 5 (case 2)
DEBUG: removeThreadFromUnknown - removing lane 3 from block 5
DEBUG: Block 5 unknown lanes before removal: {0 1 3}
DEBUG: Block 5 unknown lanes after removal: {0 1}
DEBUG: Block 5 areAllUnknownLanesResolvedForWave(0) = 0 (tracked by registry)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 0 participating lanes before removal
DEBUG: removeThreadFromAllSets - block 2 has 0 participating lanes after removal
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 starting Result-based for loop execution
DEBUG: ForStmt - Lane 0 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 9
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 10
DEBUG: ForStmt - Lane 0 in phase EvaluatingInit (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating init (Result-based)
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 3 (type 8) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 3
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: SwitchStmt - Lane 1 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x504000004910)
DEBUG: SwitchStmt - Lane 1 in phase ExecutingCase (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 1 executing statement 0 in case 1 (Result-based)
DEBUG: BinaryOpExpr - Lane 1 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 1 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 4, instruction key=(0x503000001c00,4)
DEBUG: markLaneWaitingForWave - Lane 1 wave 0 in block 4
DEBUG: markLaneWaitingForWave - Successfully set lane 1 to WaitingForWave in block 4
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 4
DEBUG: WAVE_OP: Resolution status tracked by registry for block 4
DEBUG: Block 4 wave 0 unknown lanes: {0 }
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: canExecuteWaveInstruction for lane 1 in block 4: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: WAVE_WAIT: Lane 1 received WaveOperationWait error, state=2
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 2 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x504000004910)
DEBUG: SwitchStmt - Lane 2 in phase ExecutingCase (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 2 executing statement 0 in case 2 (Result-based)
DEBUG: BinaryOpExpr - Lane 2 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 2 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 5, instruction key=(0x503000001c60,5)
DEBUG: markLaneWaitingForWave - Lane 2 wave 0 in block 5
DEBUG: markLaneWaitingForWave - Successfully set lane 2 to WaitingForWave in block 5
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 5
DEBUG: WAVE_OP: Resolution status tracked by registry for block 5
DEBUG: Block 5 wave 0 unknown lanes: {0 1 }
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: canExecuteWaveInstruction for lane 2 in block 5: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: WAVE_WAIT: Lane 2 received WaveOperationWait error, state=2
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 3 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x504000004910)
DEBUG: SwitchStmt - Lane 3 in phase ExecutingCase (Result-based, stack depth=1, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 3 executing statement 0 in case 3 (Result-based)
DEBUG: BinaryOpExpr - Lane 3 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 3 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 6, instruction key=(0x503000001cc0,6)
DEBUG: markLaneWaitingForWave - Lane 3 wave 0 in block 6
DEBUG: markLaneWaitingForWave - Successfully set lane 3 to WaitingForWave in block 6
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 6
DEBUG: WAVE_OP: Resolution status tracked by registry for block 6
DEBUG: Block 6 wave 0 unknown lanes: {0 1 2 }
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: canExecuteWaveInstruction for lane 3 in block 6: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: WAVE_WAIT: Lane 3 received WaveOperationWait error, state=2
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 0 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 11
DEBUG: ForStmt - Lane 0 created iteration starting block 11 for iteration 0
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 11
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 11
DEBUG: assignLaneToBlock - BEFORE: block 11 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 11 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 11
DEBUG: assignLaneToBlock - AFTER: block 11 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 11
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 11
DEBUG: ForStmt - Lane 0 moved to iteration starting block 11
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 11 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 11, instruction key=(0x503000001b10,11)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 11
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 11
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 11
DEBUG: WAVE_OP: Resolution status tracked by registry for block 11
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: Block 11 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 11: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 11
DEBUG: onLaneFinishWaveOp - Current status in block 11: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 11
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 11 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 11, instruction key=(0x503000001b10,11)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 11 (registry returned: 11)
DEBUG: ForStmt - Lane 0 body completed in block 11, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 11 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 11
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 1 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 12
DEBUG: ForStmt - Lane 0 created iteration starting block 12 for iteration 1
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 12
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 12
DEBUG: assignLaneToBlock - BEFORE: block 12 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 12 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 12
DEBUG: assignLaneToBlock - AFTER: block 12 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 12
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 12
DEBUG: ForStmt - Lane 0 moved to iteration starting block 12
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 12 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 12, instruction key=(0x503000001b10,12)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 12
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 12
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 12
DEBUG: WAVE_OP: Resolution status tracked by registry for block 12
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: Block 12 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 12: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 12
DEBUG: onLaneFinishWaveOp - Current status in block 12: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 12
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 12 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 12, instruction key=(0x503000001b10,12)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 12 (registry returned: 12)
DEBUG: ForStmt - Lane 0 body completed in block 12, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 12 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 12
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 2 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 2 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 13
DEBUG: ForStmt - Lane 0 created iteration starting block 13 for iteration 2
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 13
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 13
DEBUG: assignLaneToBlock - BEFORE: block 13 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 13 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 13
DEBUG: assignLaneToBlock - AFTER: block 13 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 13
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 13
DEBUG: ForStmt - Lane 0 moved to iteration starting block 13
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 13 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 13, instruction key=(0x503000001b10,13)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 13
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 13
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 13
DEBUG: WAVE_OP: Resolution status tracked by registry for block 13
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: Block 13 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 13: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 13
DEBUG: onLaneFinishWaveOp - Current status in block 13: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 13
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 2 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 13 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 13, instruction key=(0x503000001b10,13)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 13 (registry returned: 13)
DEBUG: ForStmt - Lane 0 body completed in block 13, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 13 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 13
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 3 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 3 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 14
DEBUG: ForStmt - Lane 0 created iteration starting block 14 for iteration 3
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 14
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 14
DEBUG: assignLaneToBlock - BEFORE: block 14 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 14 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 14
DEBUG: assignLaneToBlock - AFTER: block 14 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 14
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 14
DEBUG: ForStmt - Lane 0 moved to iteration starting block 14
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 14 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 14, instruction key=(0x503000001b10,14)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 14
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 14
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 14
DEBUG: WAVE_OP: Resolution status tracked by registry for block 14
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: Block 14 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 14: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 14
DEBUG: onLaneFinishWaveOp - Current status in block 14: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 14
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 3 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 14 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 14, instruction key=(0x503000001b10,14)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 14 (registry returned: 14)
DEBUG: ForStmt - Lane 0 body completed in block 14, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 14 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 14
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 4 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 4 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 15
DEBUG: ForStmt - Lane 0 created iteration starting block 15 for iteration 4
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 15
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 15
DEBUG: assignLaneToBlock - BEFORE: block 15 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 15 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 15
DEBUG: assignLaneToBlock - AFTER: block 15 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 15
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 15
DEBUG: ForStmt - Lane 0 moved to iteration starting block 15
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 15 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 15, instruction key=(0x503000001b10,15)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 15
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 15
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 15
DEBUG: WAVE_OP: Resolution status tracked by registry for block 15
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: Block 15 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 15: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 15
DEBUG: onLaneFinishWaveOp - Current status in block 15: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 15
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 4 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 15 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 15, instruction key=(0x503000001b10,15)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 15 (registry returned: 15)
DEBUG: ForStmt - Lane 0 body completed in block 15, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 15 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 15
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 5 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 5 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 16
DEBUG: ForStmt - Lane 0 created iteration starting block 16 for iteration 5
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 16
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 16
DEBUG: assignLaneToBlock - BEFORE: block 16 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 16 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 16
DEBUG: assignLaneToBlock - AFTER: block 16 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 16
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 16
DEBUG: ForStmt - Lane 0 moved to iteration starting block 16
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 16 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 16, instruction key=(0x503000001b10,16)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 16
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 16
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 16
DEBUG: WAVE_OP: Resolution status tracked by registry for block 16
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: Block 16 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 16: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 16
DEBUG: onLaneFinishWaveOp - Current status in block 16: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 16
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 5 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 16 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 16, instruction key=(0x503000001b10,16)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 16 (registry returned: 16)
DEBUG: ForStmt - Lane 0 body completed in block 16, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 16 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 16
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 6 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 6 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 17
DEBUG: ForStmt - Lane 0 created iteration starting block 17 for iteration 6
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 17
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 17
DEBUG: assignLaneToBlock - BEFORE: block 17 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 17 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 17
DEBUG: assignLaneToBlock - AFTER: block 17 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 17
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 17
DEBUG: ForStmt - Lane 0 moved to iteration starting block 17
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 17 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 17, instruction key=(0x503000001b10,17)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 17
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 17
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 17
DEBUG: WAVE_OP: Resolution status tracked by registry for block 17
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: Block 17 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 17: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 17
DEBUG: onLaneFinishWaveOp - Current status in block 17: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 17
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 6 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 17 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 17, instruction key=(0x503000001b10,17)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 17 (registry returned: 17)
DEBUG: ForStmt - Lane 0 body completed in block 17, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 17 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 17
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 7 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 7 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 18
DEBUG: ForStmt - Lane 0 created iteration starting block 18 for iteration 7
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 18
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 18
DEBUG: assignLaneToBlock - BEFORE: block 18 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 18 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 18
DEBUG: assignLaneToBlock - AFTER: block 18 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 18
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 18
DEBUG: ForStmt - Lane 0 moved to iteration starting block 18
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 18 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 18, instruction key=(0x503000001b10,18)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 18
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 18
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 18
DEBUG: WAVE_OP: Resolution status tracked by registry for block 18
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: Block 18 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 18: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 18
DEBUG: onLaneFinishWaveOp - Current status in block 18: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 18
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 7 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 18 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 18, instruction key=(0x503000001b10,18)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 18 (registry returned: 18)
DEBUG: ForStmt - Lane 0 body completed in block 18, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 18 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 18
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 8 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 8 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 19
DEBUG: ForStmt - Lane 0 created iteration starting block 19 for iteration 8
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 19
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 19
DEBUG: assignLaneToBlock - BEFORE: block 19 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 19 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 19
DEBUG: assignLaneToBlock - AFTER: block 19 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 19
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 19
DEBUG: ForStmt - Lane 0 moved to iteration starting block 19
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 19 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 19, instruction key=(0x503000001b10,19)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 19
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 19
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 19
DEBUG: WAVE_OP: Resolution status tracked by registry for block 19
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: Block 19 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 19: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 19
DEBUG: onLaneFinishWaveOp - Current status in block 19: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 19
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 8 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 19 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 19, instruction key=(0x503000001b10,19)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 19 (registry returned: 19)
DEBUG: ForStmt - Lane 0 body completed in block 19, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 19 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 19
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 9 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 9 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 20
DEBUG: ForStmt - Lane 0 created iteration starting block 20 for iteration 9
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 20
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 20
DEBUG: assignLaneToBlock - BEFORE: block 20 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 20 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 20
DEBUG: assignLaneToBlock - AFTER: block 20 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 20
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 20
DEBUG: ForStmt - Lane 0 moved to iteration starting block 20
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 20 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 20, instruction key=(0x503000001b10,20)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 20
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 20
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 20
DEBUG: WAVE_OP: Resolution status tracked by registry for block 20
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: Block 20 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 20: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 20
DEBUG: onLaneFinishWaveOp - Current status in block 20: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 20
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 9 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 20 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 20, instruction key=(0x503000001b10,20)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 20 (registry returned: 20)
DEBUG: ForStmt - Lane 0 body completed in block 20, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 20 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 20
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 10 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 10 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 21
DEBUG: ForStmt - Lane 0 created iteration starting block 21 for iteration 10
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 21
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 21
DEBUG: assignLaneToBlock - BEFORE: block 21 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 21 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 21
DEBUG: assignLaneToBlock - AFTER: block 21 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 21
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 21
DEBUG: ForStmt - Lane 0 moved to iteration starting block 21
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 21 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 21, instruction key=(0x503000001b10,21)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 21
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 21
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 21
DEBUG: WAVE_OP: Resolution status tracked by registry for block 21
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: Block 21 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 21: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 21
DEBUG: onLaneFinishWaveOp - Current status in block 21: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 21
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 10 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 21 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 21, instruction key=(0x503000001b10,21)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 21 (registry returned: 21)
DEBUG: ForStmt - Lane 0 body completed in block 21, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 21 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 21
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 11 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 11 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 22
DEBUG: ForStmt - Lane 0 created iteration starting block 22 for iteration 11
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 22
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 22
DEBUG: assignLaneToBlock - BEFORE: block 22 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 22 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 22
DEBUG: assignLaneToBlock - AFTER: block 22 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 22
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 22
DEBUG: ForStmt - Lane 0 moved to iteration starting block 22
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 22 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 22, instruction key=(0x503000001b10,22)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 22
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 22
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 22
DEBUG: WAVE_OP: Resolution status tracked by registry for block 22
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: Block 22 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 22: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 22
DEBUG: onLaneFinishWaveOp - Current status in block 22: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 22
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 11 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 22 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 22, instruction key=(0x503000001b10,22)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 22 (registry returned: 22)
DEBUG: ForStmt - Lane 0 body completed in block 22, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 22 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 22
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 12 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 12 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 23
DEBUG: ForStmt - Lane 0 created iteration starting block 23 for iteration 12
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 23
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 23
DEBUG: assignLaneToBlock - BEFORE: block 23 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 23 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 23
DEBUG: assignLaneToBlock - AFTER: block 23 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 23
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 23
DEBUG: ForStmt - Lane 0 moved to iteration starting block 23
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 23 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 23, instruction key=(0x503000001b10,23)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 23
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 23
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 23
DEBUG: WAVE_OP: Resolution status tracked by registry for block 23
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: Block 23 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 23: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 23
DEBUG: onLaneFinishWaveOp - Current status in block 23: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 23
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 12 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 23 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 23, instruction key=(0x503000001b10,23)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 23 (registry returned: 23)
DEBUG: ForStmt - Lane 0 body completed in block 23, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 23 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 23
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 13 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 13 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 24
DEBUG: ForStmt - Lane 0 created iteration starting block 24 for iteration 13
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 24
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 24
DEBUG: assignLaneToBlock - BEFORE: block 24 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 24 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 24
DEBUG: assignLaneToBlock - AFTER: block 24 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 24
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 24
DEBUG: ForStmt - Lane 0 moved to iteration starting block 24
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 24 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 24, instruction key=(0x503000001b10,24)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 24
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 24
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 24
DEBUG: WAVE_OP: Resolution status tracked by registry for block 24
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: Block 24 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 24: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 24
DEBUG: onLaneFinishWaveOp - Current status in block 24: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 24
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 13 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 24 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 24, instruction key=(0x503000001b10,24)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 24 (registry returned: 24)
DEBUG: ForStmt - Lane 0 body completed in block 24, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 24 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 24
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 14 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 14 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 25
DEBUG: ForStmt - Lane 0 created iteration starting block 25 for iteration 14
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 25
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 25
DEBUG: assignLaneToBlock - BEFORE: block 25 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 25 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 25
DEBUG: assignLaneToBlock - AFTER: block 25 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 25
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 25
DEBUG: ForStmt - Lane 0 moved to iteration starting block 25
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 25 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 25, instruction key=(0x503000001b10,25)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 25
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 25
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 25
DEBUG: WAVE_OP: Resolution status tracked by registry for block 25
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: Block 25 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 25: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 25
DEBUG: onLaneFinishWaveOp - Current status in block 25: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 25
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 14 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 25 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 25, instruction key=(0x503000001b10,25)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 25 (registry returned: 25)
DEBUG: ForStmt - Lane 0 body completed in block 25, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 25 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 25
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 15 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 15 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 26
DEBUG: ForStmt - Lane 0 created iteration starting block 26 for iteration 15
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 26
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 26
DEBUG: assignLaneToBlock - BEFORE: block 26 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 26 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 26
DEBUG: assignLaneToBlock - AFTER: block 26 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 26
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 26
DEBUG: ForStmt - Lane 0 moved to iteration starting block 26
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 26 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 26, instruction key=(0x503000001b10,26)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 26
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 26
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 26
DEBUG: WAVE_OP: Resolution status tracked by registry for block 26
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: Block 26 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 26: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 26
DEBUG: onLaneFinishWaveOp - Current status in block 26: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 26
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 15 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 26 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 26, instruction key=(0x503000001b10,26)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 26 (registry returned: 26)
DEBUG: ForStmt - Lane 0 body completed in block 26, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 26 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 26
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 16 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 16 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 27
DEBUG: ForStmt - Lane 0 created iteration starting block 27 for iteration 16
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 27
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 27
DEBUG: assignLaneToBlock - BEFORE: block 27 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 27 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 27
DEBUG: assignLaneToBlock - AFTER: block 27 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 27
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 27
DEBUG: ForStmt - Lane 0 moved to iteration starting block 27
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 27 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 27, instruction key=(0x503000001b10,27)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 27
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 27
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 27
DEBUG: WAVE_OP: Resolution status tracked by registry for block 27
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: Block 27 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 27: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 27
DEBUG: onLaneFinishWaveOp - Current status in block 27: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 27
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 16 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 27 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 27, instruction key=(0x503000001b10,27)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 27 (registry returned: 27)
DEBUG: ForStmt - Lane 0 body completed in block 27, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 27 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 27
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 17 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 17 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 28
DEBUG: ForStmt - Lane 0 created iteration starting block 28 for iteration 17
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 28
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 28
DEBUG: assignLaneToBlock - BEFORE: block 28 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 28 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 28
DEBUG: assignLaneToBlock - AFTER: block 28 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 28
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 28
DEBUG: ForStmt - Lane 0 moved to iteration starting block 28
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 28 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 28, instruction key=(0x503000001b10,28)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 28
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 28
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 28
DEBUG: WAVE_OP: Resolution status tracked by registry for block 28
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: Block 28 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 28: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 28
DEBUG: onLaneFinishWaveOp - Current status in block 28: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 28
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 17 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 28 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 28, instruction key=(0x503000001b10,28)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 28 (registry returned: 28)
DEBUG: ForStmt - Lane 0 body completed in block 28, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 28 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 28
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 18 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 18 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 29
DEBUG: ForStmt - Lane 0 created iteration starting block 29 for iteration 18
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 29
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 29
DEBUG: assignLaneToBlock - BEFORE: block 29 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 29 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 29
DEBUG: assignLaneToBlock - AFTER: block 29 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 29
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 29
DEBUG: ForStmt - Lane 0 moved to iteration starting block 29
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 29 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 29, instruction key=(0x503000001b10,29)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 29
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 29
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 29
DEBUG: WAVE_OP: Resolution status tracked by registry for block 29
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: Block 29 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 29: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 29
DEBUG: onLaneFinishWaveOp - Current status in block 29: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 29
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 18 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 29 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 29, instruction key=(0x503000001b10,29)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 29 (registry returned: 29)
DEBUG: ForStmt - Lane 0 body completed in block 29, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 29 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 29
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 19 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 19 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 30
DEBUG: ForStmt - Lane 0 created iteration starting block 30 for iteration 19
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 30
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 30
DEBUG: assignLaneToBlock - BEFORE: block 30 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 30 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 30
DEBUG: assignLaneToBlock - AFTER: block 30 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 30
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 30
DEBUG: ForStmt - Lane 0 moved to iteration starting block 30
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 30 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 30, instruction key=(0x503000001b10,30)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 30
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 30
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 30
DEBUG: WAVE_OP: Resolution status tracked by registry for block 30
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: Block 30 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 30: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 30
DEBUG: onLaneFinishWaveOp - Current status in block 30: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 30
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 19 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 30 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 30, instruction key=(0x503000001b10,30)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 30 (registry returned: 30)
DEBUG: ForStmt - Lane 0 body completed in block 30, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 30 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 30
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 20 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 20 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 31
DEBUG: ForStmt - Lane 0 created iteration starting block 31 for iteration 20
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 31
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 31
DEBUG: assignLaneToBlock - BEFORE: block 31 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 31 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 31
DEBUG: assignLaneToBlock - AFTER: block 31 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 31
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 31
DEBUG: ForStmt - Lane 0 moved to iteration starting block 31
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 31 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 31, instruction key=(0x503000001b10,31)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 31
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 31
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 31
DEBUG: WAVE_OP: Resolution status tracked by registry for block 31
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: Block 31 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 31: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 31
DEBUG: onLaneFinishWaveOp - Current status in block 31: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 31
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 20 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 31 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 31, instruction key=(0x503000001b10,31)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 31 (registry returned: 31)
DEBUG: ForStmt - Lane 0 body completed in block 31, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 31 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 31
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 21 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 21 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 32
DEBUG: ForStmt - Lane 0 created iteration starting block 32 for iteration 21
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 32
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 32
DEBUG: assignLaneToBlock - BEFORE: block 32 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 32 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 32
DEBUG: assignLaneToBlock - AFTER: block 32 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 32
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 32
DEBUG: ForStmt - Lane 0 moved to iteration starting block 32
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 32 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 32, instruction key=(0x503000001b10,32)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 32
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 32
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 32
DEBUG: WAVE_OP: Resolution status tracked by registry for block 32
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: Block 32 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 32: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 32
DEBUG: onLaneFinishWaveOp - Current status in block 32: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 32
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 21 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 32 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 32, instruction key=(0x503000001b10,32)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 32 (registry returned: 32)
DEBUG: ForStmt - Lane 0 body completed in block 32, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 32 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 32
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 22 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 22 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 33
DEBUG: ForStmt - Lane 0 created iteration starting block 33 for iteration 22
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 33
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 33
DEBUG: assignLaneToBlock - BEFORE: block 33 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 33 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 33
DEBUG: assignLaneToBlock - AFTER: block 33 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 33
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 33
DEBUG: ForStmt - Lane 0 moved to iteration starting block 33
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 33 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 33, instruction key=(0x503000001b10,33)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 33
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 33
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 33
DEBUG: WAVE_OP: Resolution status tracked by registry for block 33
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: Block 33 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 33: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 33
DEBUG: onLaneFinishWaveOp - Current status in block 33: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 33
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 22 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 33 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 33, instruction key=(0x503000001b10,33)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 33 (registry returned: 33)
DEBUG: ForStmt - Lane 0 body completed in block 33, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 33 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 33
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 23 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 23 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 34
DEBUG: ForStmt - Lane 0 created iteration starting block 34 for iteration 23
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 34
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 34
DEBUG: assignLaneToBlock - BEFORE: block 34 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 34 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 34
DEBUG: assignLaneToBlock - AFTER: block 34 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 34
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 34
DEBUG: ForStmt - Lane 0 moved to iteration starting block 34
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 34 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 34, instruction key=(0x503000001b10,34)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 34
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 34
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 34
DEBUG: WAVE_OP: Resolution status tracked by registry for block 34
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: Block 34 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 34: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 34
DEBUG: onLaneFinishWaveOp - Current status in block 34: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 34
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 23 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 34 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 34, instruction key=(0x503000001b10,34)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 34 (registry returned: 34)
DEBUG: ForStmt - Lane 0 body completed in block 34, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 34 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 34
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 24 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 24 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 35
DEBUG: ForStmt - Lane 0 created iteration starting block 35 for iteration 24
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 35
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 35
DEBUG: assignLaneToBlock - BEFORE: block 35 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 35 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 35
DEBUG: assignLaneToBlock - AFTER: block 35 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 35
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 35
DEBUG: ForStmt - Lane 0 moved to iteration starting block 35
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 35 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 35, instruction key=(0x503000001b10,35)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 35
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 35
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 35
DEBUG: WAVE_OP: Resolution status tracked by registry for block 35
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: Block 35 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 35: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 35
DEBUG: onLaneFinishWaveOp - Current status in block 35: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 35
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 24 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 35 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 35, instruction key=(0x503000001b10,35)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 35 (registry returned: 35)
DEBUG: ForStmt - Lane 0 body completed in block 35, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 35 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 35
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 25 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 25 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 36
DEBUG: ForStmt - Lane 0 created iteration starting block 36 for iteration 25
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 36
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 36
DEBUG: assignLaneToBlock - BEFORE: block 36 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 36 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 36
DEBUG: assignLaneToBlock - AFTER: block 36 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 36
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 36
DEBUG: ForStmt - Lane 0 moved to iteration starting block 36
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 36 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 36, instruction key=(0x503000001b10,36)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 36
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 36
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 36
DEBUG: WAVE_OP: Resolution status tracked by registry for block 36
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: Block 36 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 36: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 36
DEBUG: onLaneFinishWaveOp - Current status in block 36: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 36
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 25 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 36 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 36, instruction key=(0x503000001b10,36)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 36 (registry returned: 36)
DEBUG: ForStmt - Lane 0 body completed in block 36, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 36 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 36
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 26 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 26 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 37
DEBUG: ForStmt - Lane 0 created iteration starting block 37 for iteration 26
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 37
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 37
DEBUG: assignLaneToBlock - BEFORE: block 37 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 37 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 37
DEBUG: assignLaneToBlock - AFTER: block 37 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 37
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 37
DEBUG: ForStmt - Lane 0 moved to iteration starting block 37
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 37 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 37, instruction key=(0x503000001b10,37)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 37
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 37
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 37
DEBUG: WAVE_OP: Resolution status tracked by registry for block 37
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: Block 37 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 37: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 37
DEBUG: onLaneFinishWaveOp - Current status in block 37: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 37
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 26 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 37 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 37, instruction key=(0x503000001b10,37)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 37 (registry returned: 37)
DEBUG: ForStmt - Lane 0 body completed in block 37, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 37 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 37
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 27 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 27 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 38
DEBUG: ForStmt - Lane 0 created iteration starting block 38 for iteration 27
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 38
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 38
DEBUG: assignLaneToBlock - BEFORE: block 38 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 38 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 38
DEBUG: assignLaneToBlock - AFTER: block 38 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 38
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 38
DEBUG: ForStmt - Lane 0 moved to iteration starting block 38
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 38 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 38, instruction key=(0x503000001b10,38)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 38
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 38
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 38
DEBUG: WAVE_OP: Resolution status tracked by registry for block 38
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: Block 38 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 38: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 38
DEBUG: onLaneFinishWaveOp - Current status in block 38: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 38
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 27 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 38 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 38, instruction key=(0x503000001b10,38)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 38 (registry returned: 38)
DEBUG: ForStmt - Lane 0 body completed in block 38, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 38 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 38
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 28 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 28 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 39
DEBUG: ForStmt - Lane 0 created iteration starting block 39 for iteration 28
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 39
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 39
DEBUG: assignLaneToBlock - BEFORE: block 39 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 39 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 39
DEBUG: assignLaneToBlock - AFTER: block 39 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 39
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 39
DEBUG: ForStmt - Lane 0 moved to iteration starting block 39
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 39 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 39, instruction key=(0x503000001b10,39)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 39
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 39
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 39
DEBUG: WAVE_OP: Resolution status tracked by registry for block 39
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: Block 39 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 39: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 39
DEBUG: onLaneFinishWaveOp - Current status in block 39: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 39
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 28 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 39 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 39, instruction key=(0x503000001b10,39)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 39 (registry returned: 39)
DEBUG: ForStmt - Lane 0 body completed in block 39, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 39 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 39
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 29 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 29 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 40
DEBUG: ForStmt - Lane 0 created iteration starting block 40 for iteration 29
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 40
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 40
DEBUG: assignLaneToBlock - BEFORE: block 40 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 40 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 40
DEBUG: assignLaneToBlock - AFTER: block 40 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 40
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 40
DEBUG: ForStmt - Lane 0 moved to iteration starting block 40
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 40 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 40, instruction key=(0x503000001b10,40)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 40
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 40
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 40
DEBUG: WAVE_OP: Resolution status tracked by registry for block 40
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: Block 40 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 40: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 40
DEBUG: onLaneFinishWaveOp - Current status in block 40: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 40
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 29 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 40 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 40, instruction key=(0x503000001b10,40)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 40 (registry returned: 40)
DEBUG: ForStmt - Lane 0 body completed in block 40, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 40 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 40
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 30 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 30 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 41
DEBUG: ForStmt - Lane 0 created iteration starting block 41 for iteration 30
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 41
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 41
DEBUG: assignLaneToBlock - BEFORE: block 41 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 41 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 41
DEBUG: assignLaneToBlock - AFTER: block 41 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 41
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 41
DEBUG: ForStmt - Lane 0 moved to iteration starting block 41
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 41 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 41, instruction key=(0x503000001b10,41)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 41
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 41
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 41
DEBUG: WAVE_OP: Resolution status tracked by registry for block 41
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: Block 41 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 41: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 41
DEBUG: onLaneFinishWaveOp - Current status in block 41: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 41
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 30 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 41 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 41, instruction key=(0x503000001b10,41)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 41 (registry returned: 41)
DEBUG: ForStmt - Lane 0 body completed in block 41, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 41 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 41
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 31 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 31 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 42
DEBUG: ForStmt - Lane 0 created iteration starting block 42 for iteration 31
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 42
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 42
DEBUG: assignLaneToBlock - BEFORE: block 42 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 42 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 42
DEBUG: assignLaneToBlock - AFTER: block 42 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 42
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 42
DEBUG: ForStmt - Lane 0 moved to iteration starting block 42
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 42 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 42, instruction key=(0x503000001b10,42)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 42
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 42
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 42
DEBUG: WAVE_OP: Resolution status tracked by registry for block 42
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: Block 42 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 42: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 42
DEBUG: onLaneFinishWaveOp - Current status in block 42: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 42
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 31 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 42 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 42, instruction key=(0x503000001b10,42)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 42 (registry returned: 42)
DEBUG: ForStmt - Lane 0 body completed in block 42, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 42 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 42
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 32 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 32 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 43
DEBUG: ForStmt - Lane 0 created iteration starting block 43 for iteration 32
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 43
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 43
DEBUG: assignLaneToBlock - BEFORE: block 43 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 43 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 43
DEBUG: assignLaneToBlock - AFTER: block 43 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 43
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 43
DEBUG: ForStmt - Lane 0 moved to iteration starting block 43
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 43 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 43, instruction key=(0x503000001b10,43)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 43
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 43
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 43
DEBUG: WAVE_OP: Resolution status tracked by registry for block 43
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: Block 43 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 43: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 43
DEBUG: onLaneFinishWaveOp - Current status in block 43: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 43
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 32 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 43 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 43, instruction key=(0x503000001b10,43)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 43 (registry returned: 43)
DEBUG: ForStmt - Lane 0 body completed in block 43, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 43 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 43
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 33 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 33 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 44
DEBUG: ForStmt - Lane 0 created iteration starting block 44 for iteration 33
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 44
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 44
DEBUG: assignLaneToBlock - BEFORE: block 44 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 44 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 44
DEBUG: assignLaneToBlock - AFTER: block 44 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 44
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 44
DEBUG: ForStmt - Lane 0 moved to iteration starting block 44
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 44 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 44, instruction key=(0x503000001b10,44)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 44
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 44
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 44
DEBUG: WAVE_OP: Resolution status tracked by registry for block 44
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: Block 44 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 44: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 44
DEBUG: onLaneFinishWaveOp - Current status in block 44: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 44
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 33 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 44 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 44, instruction key=(0x503000001b10,44)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 44 (registry returned: 44)
DEBUG: ForStmt - Lane 0 body completed in block 44, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 44 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 44
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 34 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 34 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 45
DEBUG: ForStmt - Lane 0 created iteration starting block 45 for iteration 34
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 45
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 45
DEBUG: assignLaneToBlock - BEFORE: block 45 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 45 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 45
DEBUG: assignLaneToBlock - AFTER: block 45 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 45
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 45
DEBUG: ForStmt - Lane 0 moved to iteration starting block 45
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 45 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 45, instruction key=(0x503000001b10,45)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 45
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 45
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 45
DEBUG: WAVE_OP: Resolution status tracked by registry for block 45
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: Block 45 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 45: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 45
DEBUG: onLaneFinishWaveOp - Current status in block 45: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 45
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 34 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 45 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 45, instruction key=(0x503000001b10,45)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 45 (registry returned: 45)
DEBUG: ForStmt - Lane 0 body completed in block 45, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 45 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 45
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 35 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 35 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 } (1 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 46
DEBUG: ForStmt - Lane 0 created iteration starting block 46 for iteration 35
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 46
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 46
DEBUG: assignLaneToBlock - BEFORE: block 46 has 0 participating lanes, 0 waiting lanes, 1 unknown lanes (0)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 4) to block 46 (type 0), isHeaderToLoopBody=1
DEBUG: Keeping lane 0 as Participating in header block 9 while also adding to loop body block 46
DEBUG: assignLaneToBlock - AFTER: block 46 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 46
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 46
DEBUG: ForStmt - Lane 0 moved to iteration starting block 46
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 46 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 46, instruction key=(0x503000001b10,46)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: markLaneWaitingForWave - Lane 0 wave 0 in block 46
DEBUG: markLaneWaitingForWave - Successfully set lane 0 to WaitingForWave in block 46
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 46
DEBUG: WAVE_OP: Resolution status tracked by registry for block 46
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: Block 46 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 46: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 0 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: WAVE_WAIT: Lane 0 received WaveOperationWait error, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0  (phase: 2)
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: onLaneFinishWaveOp - Lane 0 finishing wave op in block 46
DEBUG: onLaneFinishWaveOp - Current status in block 46: 2
DEBUG: onLaneFinishWaveOp - Updated lane 0 to Participating in block 46
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 35 from statement 0 (Result-based)
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 46 (Result-based)
DEBUG: BinaryOpExpr - Lane 0 evaluating binary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'result' (Result-based)
DEBUG: VariableExpr - Variable 'result' = 0
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 46, instruction key=(0x503000001b10,46)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 0 (phase: Consumed)
WARNING: getCurrentBlock - Lane 0 found in multiple blocks: 9, 46 (registry returned: 46)
DEBUG: ForStmt - Lane 0 body completed in block 46, moving to header block 9 for increment
DEBUG: moveThreadFromUnknownToParticipating - moving lane 0 to block 9
DEBUG: assignLaneToBlock - START: lane 0 being assigned to block 9
DEBUG: assignLaneToBlock - BEFORE: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 46 (type 0) to block 9 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from block 46
DEBUG: assignLaneToBlock - AFTER: block 9 has 1 participating lanes (0), 0 waiting lanes, 0 unknown lanes
DEBUG: assignLaneToBlock - END: lane 0 successfully assigned to block 9
DEBUG: moveThreadFromUnknownToParticipating - lane 0 is now in block 9
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
DEBUG: SwitchStmt - Lane 0 resuming Result-based switch statement
DEBUG: SwitchStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 in phase ExecutingCase (Result-based, stack depth=2, our index=0, this=0x504000004910)
DEBUG: SwitchStmt - Lane 0 executing statement 0 in case 0 (Result-based)
DEBUG: ForStmt - Lane 0 resuming Result-based for loop execution
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (Result-based, stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment (Result-based)
DEBUG: UnaryOpExpr - Lane 0 evaluating unary operation (Result-based)
DEBUG: VariableExpr - Lane 0 evaluating variable 'b' (Result-based)
DEBUG: VariableExpr - Variable 'b' = 0
DEBUG: isAllParticipantsKnown - Block 4 wave 0 has 1 unknown lanes: 0  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 5 wave 0 has 2 unknown lanes: 0 1  - These lanes need to be resolved to Participating or Left
DEBUG: isAllParticipantsKnown - Block 6 wave 0 has 3 unknown lanes: 0 1 2  - These lanes need to be resolved to Participating or Left
=== Order Independence Verification ===
✅ PASS: Program is order-independent!
Verified across 1 different thread orderings.

✅ Execution completed successfully!


=== STDERR ===

=== Starting HLSL Parse with AST Ownership ===
File: /home/t-zheychen/dxc_workspace/DirectXShaderCompiler/tools/clang/tools/dxc-fuzzer/examples/control_flow_switch_loop.hlsl
About to parse AST directly...
DEBUG: Captured ASTContext pointer: 0x529000000200
DEBUG: Found function: main
DEBUG: Captured main function: 0x521000050508
DEBUG: Analyzing variable reference: laneId
DEBUG: Variable laneId is a NamedDecl, checking semantics
DEBUG: Variable laneId is a VarDecl
DEBUG: Variable laneId not in cache, analyzing initialization
DEBUG: Variable laneId has initializer
DEBUG: Analyzing initializer for laneId
DEBUG: Checking initializer of type: CallExpr
DEBUG: After IgnoreImpCasts, type is: CallExpr
DEBUG: Unknown initializer type (CallExpr) - returning false
DEBUG: Initializer analysis result: non-deterministic
DEBUG: Cached result for laneId: non-deterministic
DEBUG: Analyzing variable reference: laneId
DEBUG: Variable laneId is a NamedDecl, checking semantics
DEBUG: Variable laneId is a VarDecl
DEBUG: Found laneId in cache: non-deterministic
collect_memory_operations_in_dbeg: Processing CompoundStmt
collect_memory_operations_in_dbeg: Processing DeclStmt
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing DeclStmt
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing DeclStmt
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing SwitchStmt
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing CompoundStmt
collect_memory_operations_in_dbeg: Processing CaseStmt
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing ForStmt
collect_memory_operations_in_dbeg: Processing DeclStmt
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing BinaryOperator
  Found BinaryOperator, isAssignmentOp: 0
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing UnaryOperator
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing CompoundStmt
collect_memory_operations_in_dbeg: Processing CompoundAssignOperator
  Found BinaryOperator, isAssignmentOp: 1
  LHS type: DeclRefExpr
    is_shared_memory_access: checking DeclRefExpr
    Found DeclRefExpr
    Variable type: uint
  is_shared_memory_access(lhs): 0
    is_shared_memory_access: checking CallExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing CompoundAssignOperator
  Found BinaryOperator, isAssignmentOp: 1
  LHS type: DeclRefExpr
    is_shared_memory_access: checking DeclRefExpr
    Found DeclRefExpr
    Variable type: uint
  is_shared_memory_access(lhs): 0
    is_shared_memory_access: checking CallExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing CaseStmt
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing CompoundAssignOperator
  Found BinaryOperator, isAssignmentOp: 1
  LHS type: DeclRefExpr
    is_shared_memory_access: checking DeclRefExpr
    Found DeclRefExpr
    Variable type: uint
  is_shared_memory_access(lhs): 0
    is_shared_memory_access: checking CallExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing CaseStmt
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing CompoundAssignOperator
  Found BinaryOperator, isAssignmentOp: 1
  LHS type: DeclRefExpr
    is_shared_memory_access: checking DeclRefExpr
    Found DeclRefExpr
    Variable type: uint
  is_shared_memory_access(lhs): 0
    is_shared_memory_access: checking CallExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing CaseStmt
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing CompoundAssignOperator
  Found BinaryOperator, isAssignmentOp: 1
  LHS type: DeclRefExpr
    is_shared_memory_access: checking DeclRefExpr
    Found DeclRefExpr
    Variable type: uint
  is_shared_memory_access(lhs): 0
    is_shared_memory_access: checking CallExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing DefaultStmt
collect_memory_operations_in_dbeg: Processing CompoundAssignOperator
  Found BinaryOperator, isAssignmentOp: 1
  LHS type: DeclRefExpr
    is_shared_memory_access: checking DeclRefExpr
    Found DeclRefExpr
    Variable type: uint
  is_shared_memory_access(lhs): 0
    is_shared_memory_access: checking CallExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing DeclStmt
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing CompoundStmt
collect_synchronization_operations_in_dbeg: Processing DeclStmt
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveGetLaneIndex is a barrier operation
Found wave operation: WaveGetLaneIndex
Checking if WaveGetLaneIndex is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing DeclStmt
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing DeclStmt
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing SwitchStmt
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing CompoundStmt
collect_synchronization_operations_in_dbeg: Processing CaseStmt
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing ForStmt
collect_synchronization_operations_in_dbeg: Processing DeclStmt
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing BinaryOperator
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing UnaryOperator
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing CompoundStmt
collect_synchronization_operations_in_dbeg: Processing CompoundAssignOperator
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveActiveSum is a barrier operation
Found wave operation: WaveActiveSum
Checking if WaveActiveSum is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing CompoundAssignOperator
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveActiveSum is a barrier operation
Found wave operation: WaveActiveSum
Checking if WaveActiveSum is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing CaseStmt
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing CompoundAssignOperator
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveActiveSum is a barrier operation
Found wave operation: WaveActiveSum
Checking if WaveActiveSum is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing CaseStmt
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing CompoundAssignOperator
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveActiveSum is a barrier operation
Found wave operation: WaveActiveSum
Checking if WaveActiveSum is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing CaseStmt
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing CompoundAssignOperator
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveActiveSum is a barrier operation
Found wave operation: WaveActiveSum
Checking if WaveActiveSum is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing DefaultStmt
collect_synchronization_operations_in_dbeg: Processing CompoundAssignOperator
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveActiveSum is a barrier operation
Found wave operation: WaveActiveSum
Checking if WaveActiveSum is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing DeclStmt
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveActiveSum is a barrier operation
Found wave operation: WaveActiveSum
Checking if WaveActiveSum is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
Simplified DBEG: Single block with 32 threads and 256 memory operations

=== Cross-Dynamic-Block Analysis ===
Total memory operations: 256
Op 0: Thread 0 in DB0 wave_op
Op 1: Thread 1 in DB0 wave_op
Op 2: Thread 2 in DB0 wave_op
Op 3: Thread 3 in DB0 wave_op
Op 4: Thread 4 in DB0 wave_op
Op 5: Thread 5 in DB0 wave_op
Op 6: Thread 6 in DB0 wave_op
Op 7: Thread 7 in DB0 wave_op
Op 8: Thread 8 in DB0 wave_op
Op 9: Thread 9 in DB0 wave_op
Op 10: Thread 10 in DB0 wave_op
Op 11: Thread 11 in DB0 wave_op
Op 12: Thread 12 in DB0 wave_op
Op 13: Thread 13 in DB0 wave_op
Op 14: Thread 14 in DB0 wave_op
Op 15: Thread 15 in DB0 wave_op
Op 16: Thread 16 in DB0 wave_op
Op 17: Thread 17 in DB0 wave_op
Op 18: Thread 18 in DB0 wave_op
Op 19: Thread 19 in DB0 wave_op
Op 20: Thread 20 in DB0 wave_op
Op 21: Thread 21 in DB0 wave_op
Op 22: Thread 22 in DB0 wave_op
Op 23: Thread 23 in DB0 wave_op
Op 24: Thread 24 in DB0 wave_op
Op 25: Thread 25 in DB0 wave_op
Op 26: Thread 26 in DB0 wave_op
Op 27: Thread 27 in DB0 wave_op
Op 28: Thread 28 in DB0 wave_op
Op 29: Thread 29 in DB0 wave_op
Op 30: Thread 30 in DB0 wave_op
Op 31: Thread 31 in DB0 wave_op
Op 32: Thread 0 in DB0 wave_op
Op 33: Thread 1 in DB0 wave_op
Op 34: Thread 2 in DB0 wave_op
Op 35: Thread 3 in DB0 wave_op
Op 36: Thread 4 in DB0 wave_op
Op 37: Thread 5 in DB0 wave_op
Op 38: Thread 6 in DB0 wave_op
Op 39: Thread 7 in DB0 wave_op
Op 40: Thread 8 in DB0 wave_op
Op 41: Thread 9 in DB0 wave_op
Op 42: Thread 10 in DB0 wave_op
Op 43: Thread 11 in DB0 wave_op
Op 44: Thread 12 in DB0 wave_op
Op 45: Thread 13 in DB0 wave_op
Op 46: Thread 14 in DB0 wave_op
Op 47: Thread 15 in DB0 wave_op
Op 48: Thread 16 in DB0 wave_op
Op 49: Thread 17 in DB0 wave_op
Op 50: Thread 18 in DB0 wave_op
Op 51: Thread 19 in DB0 wave_op
Op 52: Thread 20 in DB0 wave_op
Op 53: Thread 21 in DB0 wave_op
Op 54: Thread 22 in DB0 wave_op
Op 55: Thread 23 in DB0 wave_op
Op 56: Thread 24 in DB0 wave_op
Op 57: Thread 25 in DB0 wave_op
Op 58: Thread 26 in DB0 wave_op
Op 59: Thread 27 in DB0 wave_op
Op 60: Thread 28 in DB0 wave_op
Op 61: Thread 29 in DB0 wave_op
Op 62: Thread 30 in DB0 wave_op
Op 63: Thread 31 in DB0 wave_op
Op 64: Thread 0 in DB0 wave_op
Op 65: Thread 1 in DB0 wave_op
Op 66: Thread 2 in DB0 wave_op
Op 67: Thread 3 in DB0 wave_op
Op 68: Thread 4 in DB0 wave_op
Op 69: Thread 5 in DB0 wave_op
Op 70: Thread 6 in DB0 wave_op
Op 71: Thread 7 in DB0 wave_op
Op 72: Thread 8 in DB0 wave_op
Op 73: Thread 9 in DB0 wave_op
Op 74: Thread 10 in DB0 wave_op
Op 75: Thread 11 in DB0 wave_op
Op 76: Thread 12 in DB0 wave_op
Op 77: Thread 13 in DB0 wave_op
Op 78: Thread 14 in DB0 wave_op
Op 79: Thread 15 in DB0 wave_op
Op 80: Thread 16 in DB0 wave_op
Op 81: Thread 17 in DB0 wave_op
Op 82: Thread 18 in DB0 wave_op
Op 83: Thread 19 in DB0 wave_op
Op 84: Thread 20 in DB0 wave_op
Op 85: Thread 21 in DB0 wave_op
Op 86: Thread 22 in DB0 wave_op
Op 87: Thread 23 in DB0 wave_op
Op 88: Thread 24 in DB0 wave_op
Op 89: Thread 25 in DB0 wave_op
Op 90: Thread 26 in DB0 wave_op
Op 91: Thread 27 in DB0 wave_op
Op 92: Thread 28 in DB0 wave_op
Op 93: Thread 29 in DB0 wave_op
Op 94: Thread 30 in DB0 wave_op
Op 95: Thread 31 in DB0 wave_op
Op 96: Thread 0 in DB0 wave_op
Op 97: Thread 1 in DB0 wave_op
Op 98: Thread 2 in DB0 wave_op
Op 99: Thread 3 in DB0 wave_op
Op 100: Thread 4 in DB0 wave_op
Op 101: Thread 5 in DB0 wave_op
Op 102: Thread 6 in DB0 wave_op
Op 103: Thread 7 in DB0 wave_op
Op 104: Thread 8 in DB0 wave_op
Op 105: Thread 9 in DB0 wave_op
Op 106: Thread 10 in DB0 wave_op
Op 107: Thread 11 in DB0 wave_op
Op 108: Thread 12 in DB0 wave_op
Op 109: Thread 13 in DB0 wave_op
Op 110: Thread 14 in DB0 wave_op
Op 111: Thread 15 in DB0 wave_op
Op 112: Thread 16 in DB0 wave_op
Op 113: Thread 17 in DB0 wave_op
Op 114: Thread 18 in DB0 wave_op
Op 115: Thread 19 in DB0 wave_op
Op 116: Thread 20 in DB0 wave_op
Op 117: Thread 21 in DB0 wave_op
Op 118: Thread 22 in DB0 wave_op
Op 119: Thread 23 in DB0 wave_op
Op 120: Thread 24 in DB0 wave_op
Op 121: Thread 25 in DB0 wave_op
Op 122: Thread 26 in DB0 wave_op
Op 123: Thread 27 in DB0 wave_op
Op 124: Thread 28 in DB0 wave_op
Op 125: Thread 29 in DB0 wave_op
Op 126: Thread 30 in DB0 wave_op
Op 127: Thread 31 in DB0 wave_op
Op 128: Thread 0 in DB0 wave_op
Op 129: Thread 1 in DB0 wave_op
Op 130: Thread 2 in DB0 wave_op
Op 131: Thread 3 in DB0 wave_op
Op 132: Thread 4 in DB0 wave_op
Op 133: Thread 5 in DB0 wave_op
Op 134: Thread 6 in DB0 wave_op
Op 135: Thread 7 in DB0 wave_op
Op 136: Thread 8 in DB0 wave_op
Op 137: Thread 9 in DB0 wave_op
Op 138: Thread 10 in DB0 wave_op
Op 139: Thread 11 in DB0 wave_op
Op 140: Thread 12 in DB0 wave_op
Op 141: Thread 13 in DB0 wave_op
Op 142: Thread 14 in DB0 wave_op
Op 143: Thread 15 in DB0 wave_op
Op 144: Thread 16 in DB0 wave_op
Op 145: Thread 17 in DB0 wave_op
Op 146: Thread 18 in DB0 wave_op
Op 147: Thread 19 in DB0 wave_op
Op 148: Thread 20 in DB0 wave_op
Op 149: Thread 21 in DB0 wave_op
Op 150: Thread 22 in DB0 wave_op
Op 151: Thread 23 in DB0 wave_op
Op 152: Thread 24 in DB0 wave_op
Op 153: Thread 25 in DB0 wave_op
Op 154: Thread 26 in DB0 wave_op
Op 155: Thread 27 in DB0 wave_op
Op 156: Thread 28 in DB0 wave_op
Op 157: Thread 29 in DB0 wave_op
Op 158: Thread 30 in DB0 wave_op
Op 159: Thread 31 in DB0 wave_op
Op 160: Thread 0 in DB0 wave_op
Op 161: Thread 1 in DB0 wave_op
Op 162: Thread 2 in DB0 wave_op
Op 163: Thread 3 in DB0 wave_op
Op 164: Thread 4 in DB0 wave_op
Op 165: Thread 5 in DB0 wave_op
Op 166: Thread 6 in DB0 wave_op
Op 167: Thread 7 in DB0 wave_op
Op 168: Thread 8 in DB0 wave_op
Op 169: Thread 9 in DB0 wave_op
Op 170: Thread 10 in DB0 wave_op
Op 171: Thread 11 in DB0 wave_op
Op 172: Thread 12 in DB0 wave_op
Op 173: Thread 13 in DB0 wave_op
Op 174: Thread 14 in DB0 wave_op
Op 175: Thread 15 in DB0 wave_op
Op 176: Thread 16 in DB0 wave_op
Op 177: Thread 17 in DB0 wave_op
Op 178: Thread 18 in DB0 wave_op
Op 179: Thread 19 in DB0 wave_op
Op 180: Thread 20 in DB0 wave_op
Op 181: Thread 21 in DB0 wave_op
Op 182: Thread 22 in DB0 wave_op
Op 183: Thread 23 in DB0 wave_op
Op 184: Thread 24 in DB0 wave_op
Op 185: Thread 25 in DB0 wave_op
Op 186: Thread 26 in DB0 wave_op
Op 187: Thread 27 in DB0 wave_op
Op 188: Thread 28 in DB0 wave_op
Op 189: Thread 29 in DB0 wave_op
Op 190: Thread 30 in DB0 wave_op
Op 191: Thread 31 in DB0 wave_op
Op 192: Thread 0 in DB0 wave_op
Op 193: Thread 1 in DB0 wave_op
Op 194: Thread 2 in DB0 wave_op
Op 195: Thread 3 in DB0 wave_op
Op 196: Thread 4 in DB0 wave_op
Op 197: Thread 5 in DB0 wave_op
Op 198: Thread 6 in DB0 wave_op
Op 199: Thread 7 in DB0 wave_op
Op 200: Thread 8 in DB0 wave_op
Op 201: Thread 9 in DB0 wave_op
Op 202: Thread 10 in DB0 wave_op
Op 203: Thread 11 in DB0 wave_op
Op 204: Thread 12 in DB0 wave_op
Op 205: Thread 13 in DB0 wave_op
Op 206: Thread 14 in DB0 wave_op
Op 207: Thread 15 in DB0 wave_op
Op 208: Thread 16 in DB0 wave_op
Op 209: Thread 17 in DB0 wave_op
Op 210: Thread 18 in DB0 wave_op
Op 211: Thread 19 in DB0 wave_op
Op 212: Thread 20 in DB0 wave_op
Op 213: Thread 21 in DB0 wave_op
Op 214: Thread 22 in DB0 wave_op
Op 215: Thread 23 in DB0 wave_op
Op 216: Thread 24 in DB0 wave_op
Op 217: Thread 25 in DB0 wave_op
Op 218: Thread 26 in DB0 wave_op
Op 219: Thread 27 in DB0 wave_op
Op 220: Thread 28 in DB0 wave_op
Op 221: Thread 29 in DB0 wave_op
Op 222: Thread 30 in DB0 wave_op
Op 223: Thread 31 in DB0 wave_op
Op 224: Thread 0 in DB0 wave_op
Op 225: Thread 1 in DB0 wave_op
Op 226: Thread 2 in DB0 wave_op
Op 227: Thread 3 in DB0 wave_op
Op 228: Thread 4 in DB0 wave_op
Op 229: Thread 5 in DB0 wave_op
Op 230: Thread 6 in DB0 wave_op
Op 231: Thread 7 in DB0 wave_op
Op 232: Thread 8 in DB0 wave_op
Op 233: Thread 9 in DB0 wave_op
Op 234: Thread 10 in DB0 wave_op
Op 235: Thread 11 in DB0 wave_op
Op 236: Thread 12 in DB0 wave_op
Op 237: Thread 13 in DB0 wave_op
Op 238: Thread 14 in DB0 wave_op
Op 239: Thread 15 in DB0 wave_op
Op 240: Thread 16 in DB0 wave_op
Op 241: Thread 17 in DB0 wave_op
Op 242: Thread 18 in DB0 wave_op
Op 243: Thread 19 in DB0 wave_op
Op 244: Thread 20 in DB0 wave_op
Op 245: Thread 21 in DB0 wave_op
Op 246: Thread 22 in DB0 wave_op
Op 247: Thread 23 in DB0 wave_op
Op 248: Thread 24 in DB0 wave_op
Op 249: Thread 25 in DB0 wave_op
Op 250: Thread 26 in DB0 wave_op
Op 251: Thread 27 in DB0 wave_op
Op 252: Thread 28 in DB0 wave_op
Op 253: Thread 29 in DB0 wave_op
Op 254: Thread 30 in DB0 wave_op
Op 255: Thread 31 in DB0 wave_op
SIMPLIFIED VALIDATION: Focusing on control flow determinism
Complex DBEG analysis disabled - moved to interpreter
Direct ParseAST complete
=== HLSL Parse with AST Ownership Complete ===
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 11
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 12
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 13
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 14
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 15
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 16
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 17
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 18
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 19
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 20
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 21
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 22
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 23
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 24
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 25
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 26
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 27
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 28
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 29
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 30
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 31
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 32
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 33
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 34
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 35
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 36
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 37
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 38
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 39
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 40
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 41
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 42
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 43
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 44
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 45
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 46
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready

=== Dynamic Execution Graph (MiniHLSL Interpreter) ===
Threadgroup Size: 4
Wave Size: 32
Wave Count: 1
Total Dynamic Blocks: 46
Next Block ID: 47

Dynamic Block 1:
  Block ID: 1
  Block Type: REGULAR
  Parent Block: 0
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 2:
  Block ID: 2
  Block Type: SWITCH_HEADER
  Parent Block: 1
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004910
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 3:
  Block ID: 3
  Block Type: SWITCH_CASE
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004911
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 4:
  Block ID: 4
  Block Type: SWITCH_CASE
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004912
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0} (1 lanes)
  Waiting Lanes by Wave:
    Wave 0: {1} (1 lanes)
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001c00)

Dynamic Block 5:
  Block ID: 5
  Block Type: SWITCH_CASE
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004913
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0, 1} (2 lanes)
  Waiting Lanes by Wave:
    Wave 0: {2} (1 lanes)
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001c60)

Dynamic Block 6:
  Block ID: 6
  Block Type: SWITCH_CASE
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004914
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0, 1, 2} (3 lanes)
  Waiting Lanes by Wave:
    Wave 0: {3} (1 lanes)
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001cc0)

Dynamic Block 7:
  Block ID: 7
  Block Type: SWITCH_DEFAULT
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004910
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0, 1, 2, 3} (4 lanes)

Dynamic Block 8:
  Block ID: 8
  Block Type: SWITCH_MERGE
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004910
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0, 1, 2, 3} (4 lanes)

Dynamic Block 9:
  Block ID: 9
  Block Type: LOOP_HEADER
  Parent Block: 3
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {0} (1 lanes)
  Total Participating Lanes: 1
  Arrived Lanes by Wave:
    Wave 0: {0} (1 lanes)

Dynamic Block 10:
  Block ID: 10
  Block Type: LOOP_EXIT
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0} (1 lanes)

Dynamic Block 11:
  Block ID: 11
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000057a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 12:
  Block ID: 12
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000157a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 13:
  Block ID: 13
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000257a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 14:
  Block ID: 14
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000357a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 15:
  Block ID: 15
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000457a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 16:
  Block ID: 16
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000557a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 17:
  Block ID: 17
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000657a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 18:
  Block ID: 18
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000757a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 19:
  Block ID: 19
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000857a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 20:
  Block ID: 20
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000957a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 21:
  Block ID: 21
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000a57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 22:
  Block ID: 22
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000b57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 23:
  Block ID: 23
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000c57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 24:
  Block ID: 24
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000d57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 25:
  Block ID: 25
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000e57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 26:
  Block ID: 26
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000f57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 27:
  Block ID: 27
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001057a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 28:
  Block ID: 28
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001157a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 29:
  Block ID: 29
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001257a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 30:
  Block ID: 30
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 269488144
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001357a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 31:
  Block ID: 31
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001457a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 32:
  Block ID: 32
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001557a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 33:
  Block ID: 33
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001657a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 34:
  Block ID: 34
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 84456
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001757a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 35:
  Block ID: 35
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001857a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 36:
  Block ID: 36
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001957a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 37:
  Block ID: 37
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001a57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 38:
  Block ID: 38
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001b57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 39:
  Block ID: 39
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001c57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 40:
  Block ID: 40
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001d57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 41:
  Block ID: 41
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001e57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 42:
  Block ID: 42
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001f57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 43:
  Block ID: 43
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080002057a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 44:
  Block ID: 44
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080002157a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 45:
  Block ID: 45
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080002257a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 46:
  Block ID: 46
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080002357a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

=== Wave States ===
Wave 0:
  Wave Size: 32
  Lane Count: 4
  Active Lanes: 4
  Currently Active Lanes: 4
  Lane to Block Mapping (from registry):
    Lane 0 -> Block 9
    Lane 1 -> Block 4
    Lane 2 -> Block 5
    Lane 3 -> Block 6
  Active Sync Points (39):
    Instruction 0x503000001b10 block 11 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 12 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 13 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 14 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 15 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 16 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 17 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 18 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 19 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 20 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 21 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 22 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 23 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 24 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 25 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 26 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 27 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 28 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 29 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 30 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 31 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 32 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 33 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 34 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 35 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 36 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 37 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 38 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 39 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 40 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 41 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 42 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 43 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 44 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 45 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 46 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001c00 block 4 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001c60 block 5 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001cc0 block 6 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No

=== End Dynamic Execution Graph ===


=== Final Variable Values ===
Wave 0:
  Lane 0:
    b = 0
    i = 0
    laneId = 0
    result = 0
    (state: WaitingForResume)
  Lane 1:
    i = 0
    laneId = 1
    result = 0
    (state: WaitingForWave)
  Lane 2:
    i = 0
    laneId = 2
    result = 0
    (state: WaitingForWave)
  Lane 3:
    i = 0
    laneId = 3
    result = 0
    (state: WaitingForWave)
=== End Variable Values ===

  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 11
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 12
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 13
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 14
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 15
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 16
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 17
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 18
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 19
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 20
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 21
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 22
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 23
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 24
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 25
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 26
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 27
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 28
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 29
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 30
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 31
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 32
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 33
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 34
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 35
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 36
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 37
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 38
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 39
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 40
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 41
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 42
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 43
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 44
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 45
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001b10 block 46
Collective wave operation result: 0
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 0 from WaitingForResume to Ready

=== Dynamic Execution Graph (MiniHLSL Interpreter) ===
Threadgroup Size: 4
Wave Size: 32
Wave Count: 1
Total Dynamic Blocks: 46
Next Block ID: 47

Dynamic Block 1:
  Block ID: 1
  Block Type: REGULAR
  Parent Block: 0
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 2:
  Block ID: 2
  Block Type: SWITCH_HEADER
  Parent Block: 1
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004910
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 3:
  Block ID: 3
  Block Type: SWITCH_CASE
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004911
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 4:
  Block ID: 4
  Block Type: SWITCH_CASE
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004912
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0} (1 lanes)
  Waiting Lanes by Wave:
    Wave 0: {1} (1 lanes)
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001c00)

Dynamic Block 5:
  Block ID: 5
  Block Type: SWITCH_CASE
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004913
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0, 1} (2 lanes)
  Waiting Lanes by Wave:
    Wave 0: {2} (1 lanes)
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001c60)

Dynamic Block 6:
  Block ID: 6
  Block Type: SWITCH_CASE
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004914
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0, 1, 2} (3 lanes)
  Waiting Lanes by Wave:
    Wave 0: {3} (1 lanes)
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001cc0)

Dynamic Block 7:
  Block ID: 7
  Block Type: SWITCH_DEFAULT
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004910
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0, 1, 2, 3} (4 lanes)

Dynamic Block 8:
  Block ID: 8
  Block Type: SWITCH_MERGE
  Parent Block: 2
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x504000004910
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0, 1, 2, 3} (4 lanes)

Dynamic Block 9:
  Block ID: 9
  Block Type: LOOP_HEADER
  Parent Block: 3
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {0} (1 lanes)
  Total Participating Lanes: 1
  Arrived Lanes by Wave:
    Wave 0: {0} (1 lanes)

Dynamic Block 10:
  Block ID: 10
  Block Type: LOOP_EXIT
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Unknown Lanes by Wave:
    Wave 0: {0} (1 lanes)

Dynamic Block 11:
  Block ID: 11
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 84456
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000057a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 12:
  Block ID: 12
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000157a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 13:
  Block ID: 13
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 997428920
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000257a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 14:
  Block ID: 14
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000357a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 15:
  Block ID: 15
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000457a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 16:
  Block ID: 16
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000557a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 17:
  Block ID: 17
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 228280
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000657a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 18:
  Block ID: 18
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000757a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 19:
  Block ID: 19
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000857a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 20:
  Block ID: 20
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000957a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 21:
  Block ID: 21
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000a57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 22:
  Block ID: 22
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000b57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 23:
  Block ID: 23
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000c57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 24:
  Block ID: 24
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000d57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 25:
  Block ID: 25
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000e57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 26:
  Block ID: 26
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 1484
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000f57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 27:
  Block ID: 27
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001057a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 28:
  Block ID: 28
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001157a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 29:
  Block ID: 29
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 2116
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001257a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 30:
  Block ID: 30
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 2320
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001357a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 31:
  Block ID: 31
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001457a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 32:
  Block ID: 32
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001557a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 33:
  Block ID: 33
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001657a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 34:
  Block ID: 34
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001757a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 35:
  Block ID: 35
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001857a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 36:
  Block ID: 36
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001957a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 37:
  Block ID: 37
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001a57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 38:
  Block ID: 38
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001b57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 39:
  Block ID: 39
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 997681848
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001c57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 40:
  Block ID: 40
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001d57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 41:
  Block ID: 41
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001e57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 42:
  Block ID: 42
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080001f57a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 43:
  Block ID: 43
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080002057a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 44:
  Block ID: 44
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080002157a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 45:
  Block ID: 45
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080002257a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

Dynamic Block 46:
  Block ID: 46
  Block Type: REGULAR
  Parent Block: 9
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080002357a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001b10)

=== Wave States ===
Wave 0:
  Wave Size: 32
  Lane Count: 4
  Active Lanes: 4
  Currently Active Lanes: 4
  Lane to Block Mapping (from registry):
    Lane 0 -> Block 9
    Lane 1 -> Block 4
    Lane 2 -> Block 5
    Lane 3 -> Block 6
  Active Sync Points (39):
    Instruction 0x503000001b10 block 11 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 12 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 13 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 14 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 15 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 16 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 17 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 18 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 19 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 20 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 21 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 22 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 23 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 24 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 25 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 26 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 27 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 28 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 29 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 30 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 31 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 32 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 33 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 34 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 35 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 36 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 37 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 38 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 39 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 40 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 41 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 42 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 43 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 44 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 45 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001b10 block 46 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001c00 block 4 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001c60 block 5 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No
    Instruction 0x503000001cc0 block 6 (WaveActiveOp):
      Expected: 1 lanes
      Arrived: 1 lanes
      Ready to execute: No

=== End Dynamic Execution Graph ===


=== Final Variable Values ===
Wave 0:
  Lane 0:
    b = 0
    i = 0
    laneId = 0
    result = 0
    (state: WaitingForResume)
  Lane 1:
    i = 0
    laneId = 1
    result = 0
    (state: WaitingForWave)
  Lane 2:
    i = 0
    laneId = 2
    result = 0
    (state: WaitingForWave)
  Lane 3:
    i = 0
    laneId = 3
    result = 0
    (state: WaitingForWave)
=== End Variable Values ===



=== VERIFICATION ===
⚠️  totalSum: expected 233, but not found in output

