=== COMMAND ===
/home/t-zheychen/dxc_workspace/DirectXShaderCompiler/build-fuzzer/bin/minihlsl-standalone -o 1 /home/t-zheychen/dxc_workspace/DirectXShaderCompiler/tools/clang/tools/dxc-fuzzer/examples/control_flow_nest_for.hlsl

=== RETURN CODE ===
0

=== STDOUT ===
MiniHLSL Interpreter
====================
Input file: /home/t-zheychen/dxc_workspace/DirectXShaderCompiler/tools/clang/tools/dxc-fuzzer/examples/control_flow_nest_for.hlsl
Wave size: 32
Order verification: 1 orderings

Converting HLSL function: main
Found numthreads attribute: [4, 1, 1]
Converting compound statement with 4 child statements
Converting statement: DeclStmt
Converting declaration statement
Declaring variable: laneId
Converting expression: CallExpr
Converting function call to expression: WaveGetLaneIndex
Converting statement: DeclStmt
Converting declaration statement
Declaring variable: result
Converting expression: ImplicitCastExpr
Converting expression: IntegerLiteral
Converting statement: ForStmt
Converting for statement
Converting expression: ImplicitCastExpr
Converting expression: IntegerLiteral
Converting expression: BinaryOperator
Converting expression: ImplicitCastExpr
Converting expression: DeclRefExpr
Converting expression: ImplicitCastExpr
Converting expression: IntegerLiteral
Converting expression: UnaryOperator
Converting expression: DeclRefExpr
Converting statement: CompoundAssignOperator
Converting compound assignment operator
Converting expression: DeclRefExpr
Converting expression: ImplicitCastExpr
Converting expression: CallExpr
Converting function call to expression: WaveActiveSum
Converting expression: IntegerLiteral
Converting statement: ForStmt
Converting for statement
Converting expression: ImplicitCastExpr
Converting expression: IntegerLiteral
Converting expression: BinaryOperator
Converting expression: ImplicitCastExpr
Converting expression: DeclRefExpr
Converting expression: ImplicitCastExpr
Converting expression: IntegerLiteral
Converting expression: UnaryOperator
Converting expression: DeclRefExpr
Converting statement: CompoundAssignOperator
Converting compound assignment operator
Converting expression: DeclRefExpr
Converting expression: ImplicitCastExpr
Converting expression: CallExpr
Converting function call to expression: WaveActiveSum
Converting expression: IntegerLiteral
Converting statement: DeclStmt
Converting declaration statement
Declaring variable: totalSum
Converting expression: CallExpr
Converting function call to expression: WaveActiveSum
Converting expression: ImplicitCastExpr
Converting expression: DeclRefExpr
Converted AST to interpreter program with 4 statements
Thread configuration: [4, 1, 1]

DEBUG: findOrCreateBlockForPath called with 0 waves of unknown lanes
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 1
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 1
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 1
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 1
DEBUG: ForStmt - Lane 0 starting fresh execution (pushed to stack depth=1, this=0x508000002820)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 2
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 2
DEBUG: addUnknownLane - adding lane 1 to new block 2
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 2
DEBUG: addUnknownLane - adding lane 2 to new block 2
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 2
DEBUG: addUnknownLane - adding lane 3 to new block 2
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 2
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 3
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 3
DEBUG: addUnknownLane - adding lane 1 to new block 3
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 3
DEBUG: addUnknownLane - adding lane 2 to new block 3
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 3
DEBUG: addUnknownLane - adding lane 3 to new block 3
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 3
DEBUG: ForStmt - Lane 0 in phase EvaluatingInit (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating init
DEBUG: assignLaneToBlock - moving lane 0 from block 1 (type 0) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 1
DEBUG: assignLaneToBlock - adding lane 0 to block 2
DEBUG: assignLaneToBlock - block 2 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 2 (type 4) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 0 to block 2
DEBUG: assignLaneToBlock - block 2 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 starting fresh execution (pushed to stack depth=1, this=0x508000002820)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: ForStmt - Lane 1 in phase EvaluatingInit (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating init
DEBUG: assignLaneToBlock - moving lane 1 from block 1 (type 0) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 1
DEBUG: assignLaneToBlock - adding lane 1 to block 2
DEBUG: assignLaneToBlock - block 2 now has 2 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 2 (type 4) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 1 to block 2
DEBUG: assignLaneToBlock - block 2 now has 2 participating lanes
DEBUG: ForStmt - Lane 2 starting fresh execution (pushed to stack depth=1, this=0x508000002820)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: ForStmt - Lane 2 in phase EvaluatingInit (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating init
DEBUG: assignLaneToBlock - moving lane 2 from block 1 (type 0) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 1
DEBUG: assignLaneToBlock - adding lane 2 to block 2
DEBUG: assignLaneToBlock - block 2 now has 3 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 2 (type 4) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 2 to block 2
DEBUG: assignLaneToBlock - block 2 now has 3 participating lanes
DEBUG: ForStmt - Lane 3 starting fresh execution (pushed to stack depth=1, this=0x508000002820)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: ForStmt - Lane 3 in phase EvaluatingInit (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating init
DEBUG: assignLaneToBlock - moving lane 3 from block 1 (type 0) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 1
DEBUG: assignLaneToBlock - adding lane 3 to block 2
DEBUG: assignLaneToBlock - block 2 now has 4 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 2 (type 4) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 3 to block 2
DEBUG: assignLaneToBlock - block 2 now has 4 participating lanes
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 4
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 4
DEBUG: addUnknownLane - adding lane 1 to new block 4
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 4
DEBUG: addUnknownLane - adding lane 2 to new block 4
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 4
DEBUG: addUnknownLane - adding lane 3 to new block 4
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 4
DEBUG: ForStmt - Lane 0 created iteration starting block 4 for iteration 0
DEBUG: assignLaneToBlock - moving lane 0 from block 2 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 4
DEBUG: WAVE_OP: Resolution status tracked by registry for block 4
DEBUG: Block 4 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 4: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 4 for iteration 0
DEBUG: assignLaneToBlock - moving lane 1 from block 2 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 4
DEBUG: WAVE_OP: Resolution status tracked by registry for block 4
DEBUG: Block 4 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 4: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 4 for iteration 0
DEBUG: assignLaneToBlock - moving lane 2 from block 2 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 4
DEBUG: WAVE_OP: Resolution status tracked by registry for block 4
DEBUG: Block 4 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 4: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 4 for iteration 0
DEBUG: assignLaneToBlock - moving lane 3 from block 2 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 4
DEBUG: WAVE_OP: Resolution status tracked by registry for block 4
DEBUG: Block 4 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 4: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 5
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 5
DEBUG: addUnknownLane - adding lane 1 to new block 5
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 5
DEBUG: addUnknownLane - adding lane 2 to new block 5
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 5
DEBUG: addUnknownLane - adding lane 3 to new block 5
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 5
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 6
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 6
DEBUG: addUnknownLane - adding lane 1 to new block 6
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 6
DEBUG: addUnknownLane - adding lane 2 to new block 6
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 6
DEBUG: addUnknownLane - adding lane 3 to new block 6
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 6
DEBUG: ForStmt - Lane 0 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating init
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 5
DEBUG: assignLaneToBlock - block 5 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 5 (type 4) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 0 to block 5
DEBUG: assignLaneToBlock - block 5 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: ForStmt - Lane 1 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating init
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 5
DEBUG: assignLaneToBlock - block 5 now has 2 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 5 (type 4) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 1 to block 5
DEBUG: assignLaneToBlock - block 5 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: ForStmt - Lane 2 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating init
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 5
DEBUG: assignLaneToBlock - block 5 now has 3 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 5 (type 4) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 2 to block 5
DEBUG: assignLaneToBlock - block 5 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: ForStmt - Lane 3 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating init
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 5
DEBUG: assignLaneToBlock - block 5 now has 4 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 5 (type 4) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 3 to block 5
DEBUG: assignLaneToBlock - block 5 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 7
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 7
DEBUG: addUnknownLane - adding lane 1 to new block 7
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 7
DEBUG: addUnknownLane - adding lane 2 to new block 7
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 7
DEBUG: addUnknownLane - adding lane 3 to new block 7
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 7
DEBUG: ForStmt - Lane 0 created iteration starting block 7 for iteration 0
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 7
DEBUG: ForStmt - Lane 0 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 7
DEBUG: WAVE_OP: Resolution status tracked by registry for block 7
DEBUG: Block 7 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 7: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 7 for iteration 0
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 7
DEBUG: ForStmt - Lane 1 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 7
DEBUG: WAVE_OP: Resolution status tracked by registry for block 7
DEBUG: Block 7 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 7: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 7 for iteration 0
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 7
DEBUG: ForStmt - Lane 2 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 7
DEBUG: WAVE_OP: Resolution status tracked by registry for block 7
DEBUG: Block 7 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 7: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 7 for iteration 0
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 7
DEBUG: ForStmt - Lane 3 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 7
DEBUG: WAVE_OP: Resolution status tracked by registry for block 7
DEBUG: Block 7 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 7: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 7 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 7
DEBUG: ForStmt - Lane 0 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 body completed in block 7, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 7 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 0 to block 5
DEBUG: assignLaneToBlock - block 5 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 7 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 7
DEBUG: ForStmt - Lane 1 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 body completed in block 7, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 7 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 1 to block 5
DEBUG: assignLaneToBlock - block 5 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 7 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 7
DEBUG: ForStmt - Lane 2 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 body completed in block 7, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 7 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 2 to block 5
DEBUG: assignLaneToBlock - block 5 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 7 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 7
DEBUG: ForStmt - Lane 3 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 body completed in block 7, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 7 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 3 to block 5
DEBUG: assignLaneToBlock - block 5 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 8
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 8
DEBUG: addUnknownLane - adding lane 1 to new block 8
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 8
DEBUG: addUnknownLane - adding lane 2 to new block 8
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 8
DEBUG: addUnknownLane - adding lane 3 to new block 8
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 8
DEBUG: ForStmt - Lane 0 created iteration starting block 8 for iteration 1
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 8
DEBUG: ForStmt - Lane 0 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 8
DEBUG: WAVE_OP: Resolution status tracked by registry for block 8
DEBUG: Block 8 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 8: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 8 for iteration 1
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 8
DEBUG: ForStmt - Lane 1 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 8
DEBUG: WAVE_OP: Resolution status tracked by registry for block 8
DEBUG: Block 8 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 8: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 8 for iteration 1
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 8
DEBUG: ForStmt - Lane 2 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 8
DEBUG: WAVE_OP: Resolution status tracked by registry for block 8
DEBUG: Block 8 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 8: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 8 for iteration 1
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 8
DEBUG: ForStmt - Lane 3 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 8
DEBUG: WAVE_OP: Resolution status tracked by registry for block 8
DEBUG: Block 8 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 8: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 8 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 8
DEBUG: ForStmt - Lane 0 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 body completed in block 8, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 8 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 0 to block 5
DEBUG: assignLaneToBlock - block 5 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 8 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 8
DEBUG: ForStmt - Lane 1 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 body completed in block 8, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 8 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 1 to block 5
DEBUG: assignLaneToBlock - block 5 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 8 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 8
DEBUG: ForStmt - Lane 2 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 body completed in block 8, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 8 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 2 to block 5
DEBUG: assignLaneToBlock - block 5 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 8 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 8
DEBUG: ForStmt - Lane 3 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 body completed in block 8, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 8 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 3 to block 5
DEBUG: assignLaneToBlock - block 5 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 6 (type 6) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 0 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 natural flow from block 4 to block 6 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 0 body completed in block 6, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 6 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 0 to block 2
DEBUG: assignLaneToBlock - block 2 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 6 (type 6) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 1 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 natural flow from block 4 to block 6 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 1 body completed in block 6, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 6 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 1 to block 2
DEBUG: assignLaneToBlock - block 2 now has 2 participating lanes
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 6 (type 6) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 2 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 natural flow from block 4 to block 6 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 2 body completed in block 6, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 6 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 2 to block 2
DEBUG: assignLaneToBlock - block 2 now has 3 participating lanes
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 6 (type 6) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 3 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 natural flow from block 4 to block 6 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 3 body completed in block 6, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 6 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 3 to block 2
DEBUG: assignLaneToBlock - block 2 now has 4 participating lanes
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 9
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 9
DEBUG: addUnknownLane - adding lane 1 to new block 9
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 9
DEBUG: addUnknownLane - adding lane 2 to new block 9
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 9
DEBUG: addUnknownLane - adding lane 3 to new block 9
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 9
DEBUG: ForStmt - Lane 0 created iteration starting block 9 for iteration 1
DEBUG: assignLaneToBlock - moving lane 0 from block 2 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 9
DEBUG: WAVE_OP: Resolution status tracked by registry for block 9
DEBUG: Block 9 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 9: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 9 for iteration 1
DEBUG: assignLaneToBlock - moving lane 1 from block 2 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 9
DEBUG: WAVE_OP: Resolution status tracked by registry for block 9
DEBUG: Block 9 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 9: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 9 for iteration 1
DEBUG: assignLaneToBlock - moving lane 2 from block 2 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 9
DEBUG: WAVE_OP: Resolution status tracked by registry for block 9
DEBUG: Block 9 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 9: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 9 for iteration 1
DEBUG: assignLaneToBlock - moving lane 3 from block 2 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 9
DEBUG: WAVE_OP: Resolution status tracked by registry for block 9
DEBUG: Block 9 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 9: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 10
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 10
DEBUG: addUnknownLane - adding lane 1 to new block 10
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 10
DEBUG: addUnknownLane - adding lane 2 to new block 10
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 10
DEBUG: addUnknownLane - adding lane 3 to new block 10
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 10
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 11
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 11
DEBUG: addUnknownLane - adding lane 1 to new block 11
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 11
DEBUG: addUnknownLane - adding lane 2 to new block 11
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 11
DEBUG: addUnknownLane - adding lane 3 to new block 11
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 11
DEBUG: ForStmt - Lane 0 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating init
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 10
DEBUG: assignLaneToBlock - block 10 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 10 (type 4) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 0 to block 10
DEBUG: assignLaneToBlock - block 10 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 10 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 11 - not modifying unknown lanes
DEBUG: ForStmt - Lane 1 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating init
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 10
DEBUG: assignLaneToBlock - block 10 now has 2 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 10 (type 4) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 1 to block 10
DEBUG: assignLaneToBlock - block 10 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 10 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 11 - not modifying unknown lanes
DEBUG: ForStmt - Lane 2 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating init
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 10
DEBUG: assignLaneToBlock - block 10 now has 3 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 10 (type 4) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 2 to block 10
DEBUG: assignLaneToBlock - block 10 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 10 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 11 - not modifying unknown lanes
DEBUG: ForStmt - Lane 3 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating init
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 10
DEBUG: assignLaneToBlock - block 10 now has 4 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 10 (type 4) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 3 to block 10
DEBUG: assignLaneToBlock - block 10 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 12
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 12
DEBUG: addUnknownLane - adding lane 1 to new block 12
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 12
DEBUG: addUnknownLane - adding lane 2 to new block 12
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 12
DEBUG: addUnknownLane - adding lane 3 to new block 12
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 12
DEBUG: ForStmt - Lane 0 created iteration starting block 12 for iteration 0
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 12
DEBUG: ForStmt - Lane 0 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 12
DEBUG: WAVE_OP: Resolution status tracked by registry for block 12
DEBUG: Block 12 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 12: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 12 for iteration 0
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 12
DEBUG: ForStmt - Lane 1 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 12
DEBUG: WAVE_OP: Resolution status tracked by registry for block 12
DEBUG: Block 12 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 12: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 12 for iteration 0
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 12
DEBUG: ForStmt - Lane 2 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 12
DEBUG: WAVE_OP: Resolution status tracked by registry for block 12
DEBUG: Block 12 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 12: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 12 for iteration 0
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 12
DEBUG: ForStmt - Lane 3 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 12
DEBUG: WAVE_OP: Resolution status tracked by registry for block 12
DEBUG: Block 12 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 12: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 12 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 12
DEBUG: ForStmt - Lane 0 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 body completed in block 12, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 12 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 0 to block 10
DEBUG: assignLaneToBlock - block 10 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 12 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 12
DEBUG: ForStmt - Lane 1 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 body completed in block 12, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 12 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 1 to block 10
DEBUG: assignLaneToBlock - block 10 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 12 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 12
DEBUG: ForStmt - Lane 2 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 body completed in block 12, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 12 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 2 to block 10
DEBUG: assignLaneToBlock - block 10 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 12 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 12
DEBUG: ForStmt - Lane 3 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 body completed in block 12, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 12 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 3 to block 10
DEBUG: assignLaneToBlock - block 10 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 13
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 13
DEBUG: addUnknownLane - adding lane 1 to new block 13
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 13
DEBUG: addUnknownLane - adding lane 2 to new block 13
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 13
DEBUG: addUnknownLane - adding lane 3 to new block 13
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 13
DEBUG: ForStmt - Lane 0 created iteration starting block 13 for iteration 1
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 13
DEBUG: ForStmt - Lane 0 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 13
DEBUG: WAVE_OP: Resolution status tracked by registry for block 13
DEBUG: Block 13 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 13: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 13 for iteration 1
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 13
DEBUG: ForStmt - Lane 1 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 13
DEBUG: WAVE_OP: Resolution status tracked by registry for block 13
DEBUG: Block 13 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 13: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 13 for iteration 1
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 13
DEBUG: ForStmt - Lane 2 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 13
DEBUG: WAVE_OP: Resolution status tracked by registry for block 13
DEBUG: Block 13 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 13: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 13 for iteration 1
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 13
DEBUG: ForStmt - Lane 3 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 13
DEBUG: WAVE_OP: Resolution status tracked by registry for block 13
DEBUG: Block 13 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 13: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 13 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 13
DEBUG: ForStmt - Lane 0 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 body completed in block 13, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 13 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 0 to block 10
DEBUG: assignLaneToBlock - block 10 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 13 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 13
DEBUG: ForStmt - Lane 1 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 body completed in block 13, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 13 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 1 to block 10
DEBUG: assignLaneToBlock - block 10 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 13 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 13
DEBUG: ForStmt - Lane 2 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 body completed in block 13, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 13 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 2 to block 10
DEBUG: assignLaneToBlock - block 10 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 13 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 13
DEBUG: ForStmt - Lane 3 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 body completed in block 13, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 13 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 3 to block 10
DEBUG: assignLaneToBlock - block 10 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 11 (type 6) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 0 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 natural flow from block 9 to block 11 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 0 body completed in block 11, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 11 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 0 to block 2
DEBUG: assignLaneToBlock - block 2 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 11 (type 6) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 1 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 natural flow from block 9 to block 11 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 1 body completed in block 11, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 11 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 1 to block 2
DEBUG: assignLaneToBlock - block 2 now has 2 participating lanes
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 11 (type 6) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 2 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 natural flow from block 9 to block 11 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 2 body completed in block 11, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 11 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 2 to block 2
DEBUG: assignLaneToBlock - block 2 now has 3 participating lanes
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 11 (type 6) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 3 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 natural flow from block 9 to block 11 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 3 body completed in block 11, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 11 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 3 to block 2
DEBUG: assignLaneToBlock - block 2 now has 4 participating lanes
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 3 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 2
DEBUG: removeThreadFromAllSets - Block 2 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 2 has 3 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 3 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 4 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 4
DEBUG: removeThreadFromAllSets - block 4 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 4
DEBUG: removeThreadFromAllSets - Block 4 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 4 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 5 (child of 4)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 9 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 9
DEBUG: removeThreadFromAllSets - block 9 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 9
DEBUG: removeThreadFromAllSets - Block 9 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 9 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 10 (child of 9)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 2 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 2
DEBUG: removeThreadFromAllSets - Block 2 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 2 has 2 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 3 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 4 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 4
DEBUG: removeThreadFromAllSets - block 4 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 4
DEBUG: removeThreadFromAllSets - Block 4 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 4 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 5 (child of 4)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 9 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 9
DEBUG: removeThreadFromAllSets - block 9 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 9
DEBUG: removeThreadFromAllSets - Block 9 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 9 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 10 (child of 9)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 1 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 2
DEBUG: removeThreadFromAllSets - Block 2 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 2 has 1 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 3 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 4 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 4
DEBUG: removeThreadFromAllSets - block 4 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 4
DEBUG: removeThreadFromAllSets - Block 4 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 4 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 5 (child of 4)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 9 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 9
DEBUG: removeThreadFromAllSets - block 9 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 9
DEBUG: removeThreadFromAllSets - Block 9 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 9 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 10 (child of 9)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 2
DEBUG: removeThreadFromAllSets - Block 2 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 2 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 3 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 4 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 4
DEBUG: removeThreadFromAllSets - block 4 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 4
DEBUG: removeThreadFromAllSets - Block 4 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 4 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 5 (child of 4)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 9 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 9
DEBUG: removeThreadFromAllSets - block 9 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 9
DEBUG: removeThreadFromAllSets - Block 9 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 9 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 10 (child of 9)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase Reconverging (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 0 from block 2 (type 4) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 0 to block 3
DEBUG: assignLaneToBlock - block 3 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 3 (type 6) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 3
DEBUG: assignLaneToBlock - adding lane 0 to block 3
DEBUG: assignLaneToBlock - block 3 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase Reconverging (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 1 from block 2 (type 4) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 1 to block 3
DEBUG: assignLaneToBlock - block 3 now has 2 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 3 (type 6) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 3
DEBUG: assignLaneToBlock - adding lane 1 to block 3
DEBUG: assignLaneToBlock - block 3 now has 2 participating lanes
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase Reconverging (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 2 from block 2 (type 4) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 2 to block 3
DEBUG: assignLaneToBlock - block 3 now has 3 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 3 (type 6) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 3
DEBUG: assignLaneToBlock - adding lane 2 to block 3
DEBUG: assignLaneToBlock - block 3 now has 3 participating lanes
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase Reconverging (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 3 from block 2 (type 4) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 3 to block 3
DEBUG: assignLaneToBlock - block 3 now has 4 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 3 (type 6) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 3
DEBUG: assignLaneToBlock - adding lane 3 to block 3
DEBUG: assignLaneToBlock - block 3 now has 4 participating lanes
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 3
DEBUG: WAVE_OP: Resolution status tracked by registry for block 3
DEBUG: Block 3 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 3: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=0, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: VarDeclStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 3
DEBUG: WAVE_OP: Resolution status tracked by registry for block 3
DEBUG: Block 3 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 1 in block 3: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=0, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: VarDeclStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 3
DEBUG: WAVE_OP: Resolution status tracked by registry for block 3
DEBUG: Block 3 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 2 in block 3: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=0, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: VarDeclStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 3
DEBUG: WAVE_OP: Resolution status tracked by registry for block 3
DEBUG: Block 3 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 3: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: VarDeclStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 96 (phase: 2)
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 96 (phase: 2)
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 96 (phase: 2)
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 96 (phase: 3)
lane 0 have completed execution
lane 1 have completed execution
lane 2 have completed execution
lane 3 have completed execution
=== Sequential Execution ===
✅ Execution successful
Thread Return Values:
  Thread 0: 0
  Thread 1: 0
  Thread 2: 0
  Thread 3: 0

DEBUG: findOrCreateBlockForPath called with 0 waves of unknown lanes
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 1
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 1
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 1
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 1
DEBUG: ForStmt - Lane 0 starting fresh execution (pushed to stack depth=1, this=0x508000002820)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 2
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 2
DEBUG: addUnknownLane - adding lane 1 to new block 2
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 2
DEBUG: addUnknownLane - adding lane 2 to new block 2
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 2
DEBUG: addUnknownLane - adding lane 3 to new block 2
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 2
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 3
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 3
DEBUG: addUnknownLane - adding lane 1 to new block 3
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 3
DEBUG: addUnknownLane - adding lane 2 to new block 3
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 3
DEBUG: addUnknownLane - adding lane 3 to new block 3
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 3
DEBUG: ForStmt - Lane 0 in phase EvaluatingInit (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating init
DEBUG: assignLaneToBlock - moving lane 0 from block 1 (type 0) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 1
DEBUG: assignLaneToBlock - adding lane 0 to block 2
DEBUG: assignLaneToBlock - block 2 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 2 (type 4) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 0 to block 2
DEBUG: assignLaneToBlock - block 2 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 starting fresh execution (pushed to stack depth=1, this=0x508000002820)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: ForStmt - Lane 1 in phase EvaluatingInit (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating init
DEBUG: assignLaneToBlock - moving lane 1 from block 1 (type 0) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 1
DEBUG: assignLaneToBlock - adding lane 1 to block 2
DEBUG: assignLaneToBlock - block 2 now has 2 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 2 (type 4) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 1 to block 2
DEBUG: assignLaneToBlock - block 2 now has 2 participating lanes
DEBUG: ForStmt - Lane 2 starting fresh execution (pushed to stack depth=1, this=0x508000002820)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: ForStmt - Lane 2 in phase EvaluatingInit (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating init
DEBUG: assignLaneToBlock - moving lane 2 from block 1 (type 0) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 1
DEBUG: assignLaneToBlock - adding lane 2 to block 2
DEBUG: assignLaneToBlock - block 2 now has 3 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 2 (type 4) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 2 to block 2
DEBUG: assignLaneToBlock - block 2 now has 3 participating lanes
DEBUG: ForStmt - Lane 3 starting fresh execution (pushed to stack depth=1, this=0x508000002820)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 2 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 3 - not modifying unknown lanes
DEBUG: ForStmt - Lane 3 in phase EvaluatingInit (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating init
DEBUG: assignLaneToBlock - moving lane 3 from block 1 (type 0) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 1
DEBUG: assignLaneToBlock - adding lane 3 to block 2
DEBUG: assignLaneToBlock - block 2 now has 4 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 2 (type 4) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 3 to block 2
DEBUG: assignLaneToBlock - block 2 now has 4 participating lanes
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 4
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 4
DEBUG: addUnknownLane - adding lane 1 to new block 4
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 4
DEBUG: addUnknownLane - adding lane 2 to new block 4
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 4
DEBUG: addUnknownLane - adding lane 3 to new block 4
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 4
DEBUG: ForStmt - Lane 0 created iteration starting block 4 for iteration 0
DEBUG: assignLaneToBlock - moving lane 0 from block 2 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 4
DEBUG: WAVE_OP: Resolution status tracked by registry for block 4
DEBUG: Block 4 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 4: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 4 for iteration 0
DEBUG: assignLaneToBlock - moving lane 1 from block 2 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 4
DEBUG: WAVE_OP: Resolution status tracked by registry for block 4
DEBUG: Block 4 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 4: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 4 for iteration 0
DEBUG: assignLaneToBlock - moving lane 2 from block 2 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 4
DEBUG: WAVE_OP: Resolution status tracked by registry for block 4
DEBUG: Block 4 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 4: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 4 for iteration 0
DEBUG: assignLaneToBlock - moving lane 3 from block 2 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 4
DEBUG: WAVE_OP: Resolution status tracked by registry for block 4
DEBUG: Block 4 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 4: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 5
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 5
DEBUG: addUnknownLane - adding lane 1 to new block 5
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 5
DEBUG: addUnknownLane - adding lane 2 to new block 5
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 5
DEBUG: addUnknownLane - adding lane 3 to new block 5
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 5
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 6
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 6
DEBUG: addUnknownLane - adding lane 1 to new block 6
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 6
DEBUG: addUnknownLane - adding lane 2 to new block 6
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 6
DEBUG: addUnknownLane - adding lane 3 to new block 6
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 6
DEBUG: ForStmt - Lane 0 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating init
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 5
DEBUG: assignLaneToBlock - block 5 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 5 (type 4) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 0 to block 5
DEBUG: assignLaneToBlock - block 5 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: ForStmt - Lane 1 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating init
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 5
DEBUG: assignLaneToBlock - block 5 now has 2 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 5 (type 4) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 1 to block 5
DEBUG: assignLaneToBlock - block 5 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: ForStmt - Lane 2 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating init
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 5
DEBUG: assignLaneToBlock - block 5 now has 3 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 5 (type 4) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 2 to block 5
DEBUG: assignLaneToBlock - block 5 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 0 in block 4
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 4, instruction key=(0x5030000018d0,4)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 5 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 6 - not modifying unknown lanes
DEBUG: ForStmt - Lane 3 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating init
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 5
DEBUG: assignLaneToBlock - block 5 now has 4 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 5 (type 4) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 3 to block 5
DEBUG: assignLaneToBlock - block 5 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 7
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 7
DEBUG: addUnknownLane - adding lane 1 to new block 7
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 7
DEBUG: addUnknownLane - adding lane 2 to new block 7
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 7
DEBUG: addUnknownLane - adding lane 3 to new block 7
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 7
DEBUG: ForStmt - Lane 0 created iteration starting block 7 for iteration 0
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 7
DEBUG: ForStmt - Lane 0 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 7
DEBUG: WAVE_OP: Resolution status tracked by registry for block 7
DEBUG: Block 7 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 7: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 7 for iteration 0
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 7
DEBUG: ForStmt - Lane 1 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 7
DEBUG: WAVE_OP: Resolution status tracked by registry for block 7
DEBUG: Block 7 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 7: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 7 for iteration 0
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 7
DEBUG: ForStmt - Lane 2 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 7
DEBUG: WAVE_OP: Resolution status tracked by registry for block 7
DEBUG: Block 7 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 7: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 7 for iteration 0
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 7
DEBUG: ForStmt - Lane 3 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 7
DEBUG: WAVE_OP: Resolution status tracked by registry for block 7
DEBUG: Block 7 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 7: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 7 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 7
DEBUG: ForStmt - Lane 0 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 body completed in block 7, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 7 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 0 to block 5
DEBUG: assignLaneToBlock - block 5 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 7 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 7
DEBUG: ForStmt - Lane 1 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 body completed in block 7, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 7 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 1 to block 5
DEBUG: assignLaneToBlock - block 5 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 7 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 7
DEBUG: ForStmt - Lane 2 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 body completed in block 7, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 7 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 2 to block 5
DEBUG: assignLaneToBlock - block 5 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 7 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 7 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 7
DEBUG: assignLaneToBlock - block 7 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 7
DEBUG: ForStmt - Lane 3 executing statement 0 in block 7
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 7, instruction key=(0x503000001990,7)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 body completed in block 7, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 7 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 7
DEBUG: assignLaneToBlock - adding lane 3 to block 5
DEBUG: assignLaneToBlock - block 5 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 8
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 8
DEBUG: addUnknownLane - adding lane 1 to new block 8
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 8
DEBUG: addUnknownLane - adding lane 2 to new block 8
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 8
DEBUG: addUnknownLane - adding lane 3 to new block 8
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 8
DEBUG: ForStmt - Lane 0 created iteration starting block 8 for iteration 1
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 8
DEBUG: ForStmt - Lane 0 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 8
DEBUG: WAVE_OP: Resolution status tracked by registry for block 8
DEBUG: Block 8 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 8: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 8 for iteration 1
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 8
DEBUG: ForStmt - Lane 1 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 8
DEBUG: WAVE_OP: Resolution status tracked by registry for block 8
DEBUG: Block 8 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 8: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 8 for iteration 1
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 8
DEBUG: ForStmt - Lane 2 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 8
DEBUG: WAVE_OP: Resolution status tracked by registry for block 8
DEBUG: Block 8 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 8: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 8 for iteration 1
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 8
DEBUG: ForStmt - Lane 3 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 8
DEBUG: WAVE_OP: Resolution status tracked by registry for block 8
DEBUG: Block 8 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 8: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 1, iteration 0
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 8 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 8
DEBUG: ForStmt - Lane 0 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 body completed in block 8, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 8 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 0 to block 5
DEBUG: assignLaneToBlock - block 5 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 8 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 8
DEBUG: ForStmt - Lane 1 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 body completed in block 8, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 8 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 1 to block 5
DEBUG: assignLaneToBlock - block 5 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 8 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 8
DEBUG: ForStmt - Lane 2 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 body completed in block 8, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 8 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 2 to block 5
DEBUG: assignLaneToBlock - block 5 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 8 (type 0) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 8 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 8
DEBUG: assignLaneToBlock - block 8 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 8
DEBUG: ForStmt - Lane 3 executing statement 0 in block 8
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 8, instruction key=(0x503000001990,8)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 body completed in block 8, moving to header block 5 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 8 (type 0) to block 5 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 8
DEBUG: assignLaneToBlock - adding lane 3 to block 5
DEBUG: assignLaneToBlock - block 5 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 5
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 0 to block 4
DEBUG: assignLaneToBlock - block 4 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 4
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 1 to block 4
DEBUG: assignLaneToBlock - block 4 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 4
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 2 to block 4
DEBUG: assignLaneToBlock - block 4 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 4
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 5 (type 4) to block 4 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 5
DEBUG: assignLaneToBlock - adding lane 3 to block 4
DEBUG: assignLaneToBlock - block 4 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 4
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 4, Block after: 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 4
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 0 from block 4 (type 0) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 0 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 6 (type 6) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 0 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 natural flow from block 4 to block 6 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 0 body completed in block 6, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 6 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 0 to block 2
DEBUG: assignLaneToBlock - block 2 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 4
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 1 from block 4 (type 0) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 1 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 6 (type 6) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 1 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 natural flow from block 4 to block 6 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 1 body completed in block 6, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 6 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 1 to block 2
DEBUG: assignLaneToBlock - block 2 now has 2 participating lanes
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 4
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 2 from block 4 (type 0) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 2 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 6 (type 6) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 2 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 natural flow from block 4 to block 6 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 2 body completed in block 6, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 6 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 2 to block 2
DEBUG: assignLaneToBlock - block 2 now has 3 participating lanes
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 4
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 3 from block 4 (type 0) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 4
DEBUG: assignLaneToBlock - adding lane 3 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 6 (type 6) to block 6 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 3 to block 6
DEBUG: assignLaneToBlock - block 6 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 natural flow from block 4 to block 6 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 3 body completed in block 6, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 6 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 6
DEBUG: assignLaneToBlock - adding lane 3 to block 2
DEBUG: assignLaneToBlock - block 2 now has 4 participating lanes
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 9
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 9
DEBUG: addUnknownLane - adding lane 1 to new block 9
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 9
DEBUG: addUnknownLane - adding lane 2 to new block 9
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 9
DEBUG: addUnknownLane - adding lane 3 to new block 9
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 9
DEBUG: ForStmt - Lane 0 created iteration starting block 9 for iteration 1
DEBUG: assignLaneToBlock - moving lane 0 from block 2 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 9
DEBUG: WAVE_OP: Resolution status tracked by registry for block 9
DEBUG: Block 9 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 9: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 9 for iteration 1
DEBUG: assignLaneToBlock - moving lane 1 from block 2 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 9
DEBUG: WAVE_OP: Resolution status tracked by registry for block 9
DEBUG: Block 9 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 9: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 9 for iteration 1
DEBUG: assignLaneToBlock - moving lane 2 from block 2 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 9
DEBUG: WAVE_OP: Resolution status tracked by registry for block 9
DEBUG: Block 9 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 9: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 9 for iteration 1
DEBUG: assignLaneToBlock - moving lane 3 from block 2 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 9
DEBUG: WAVE_OP: Resolution status tracked by registry for block 9
DEBUG: Block 9 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 9: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 10
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 10
DEBUG: addUnknownLane - adding lane 1 to new block 10
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 10
DEBUG: addUnknownLane - adding lane 2 to new block 10
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 10
DEBUG: addUnknownLane - adding lane 3 to new block 10
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 10
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 11
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 11
DEBUG: addUnknownLane - adding lane 1 to new block 11
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 11
DEBUG: addUnknownLane - adding lane 2 to new block 11
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 11
DEBUG: addUnknownLane - adding lane 3 to new block 11
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 11
DEBUG: ForStmt - Lane 0 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating init
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 10
DEBUG: assignLaneToBlock - block 10 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 10 (type 4) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 0 to block 10
DEBUG: assignLaneToBlock - block 10 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 10 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 11 - not modifying unknown lanes
DEBUG: ForStmt - Lane 1 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating init
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 10
DEBUG: assignLaneToBlock - block 10 now has 2 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 10 (type 4) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 1 to block 10
DEBUG: assignLaneToBlock - block 10 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 10 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 11 - not modifying unknown lanes
DEBUG: ForStmt - Lane 2 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating init
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 10
DEBUG: assignLaneToBlock - block 10 now has 3 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 10 (type 4) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 2 to block 10
DEBUG: assignLaneToBlock - block 10 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 0 in block 9
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 9, instruction key=(0x5030000018d0,9)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 starting fresh execution (pushed to stack depth=2, this=0x5080000027a0)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 10 - not modifying unknown lanes
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: Found existing block 11 - not modifying unknown lanes
DEBUG: ForStmt - Lane 3 in phase EvaluatingInit (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating init
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 10
DEBUG: assignLaneToBlock - block 10 now has 4 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 10 (type 4) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 3 to block 10
DEBUG: assignLaneToBlock - block 10 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 0
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 12
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 12
DEBUG: addUnknownLane - adding lane 1 to new block 12
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 12
DEBUG: addUnknownLane - adding lane 2 to new block 12
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 12
DEBUG: addUnknownLane - adding lane 3 to new block 12
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 12
DEBUG: ForStmt - Lane 0 created iteration starting block 12 for iteration 0
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 12
DEBUG: ForStmt - Lane 0 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 12
DEBUG: WAVE_OP: Resolution status tracked by registry for block 12
DEBUG: Block 12 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 12: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 12 for iteration 0
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 12
DEBUG: ForStmt - Lane 1 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 12
DEBUG: WAVE_OP: Resolution status tracked by registry for block 12
DEBUG: Block 12 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 12: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 12 for iteration 0
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 12
DEBUG: ForStmt - Lane 2 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 12
DEBUG: WAVE_OP: Resolution status tracked by registry for block 12
DEBUG: Block 12 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 12: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 12 for iteration 0
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 12
DEBUG: ForStmt - Lane 3 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 12
DEBUG: WAVE_OP: Resolution status tracked by registry for block 12
DEBUG: Block 12 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 12: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 0
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 12 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 12
DEBUG: ForStmt - Lane 0 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 body completed in block 12, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 12 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 0 to block 10
DEBUG: assignLaneToBlock - block 10 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 12 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 12
DEBUG: ForStmt - Lane 1 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 body completed in block 12, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 12 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 1 to block 10
DEBUG: assignLaneToBlock - block 10 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 12 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 12
DEBUG: ForStmt - Lane 2 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 body completed in block 12, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 12 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 2 to block 10
DEBUG: assignLaneToBlock - block 10 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 12 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 0 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 12 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 12
DEBUG: assignLaneToBlock - block 12 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 12
DEBUG: ForStmt - Lane 3 executing statement 0 in block 12
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 12, instruction key=(0x503000001990,12)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 body completed in block 12, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 12 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 12
DEBUG: assignLaneToBlock - adding lane 3 to block 10
DEBUG: assignLaneToBlock - block 10 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 0
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 1
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: findOrCreateBlockForPath called with 1 waves of unknown lanes
  Wave 0: {0 1 2 3 } (4 lanes)
DEBUG: addUnknownLane - adding lane 0 to new block 13
DEBUG: addUnknownLane - added lane 0 to unknown lanes of block 13
DEBUG: addUnknownLane - adding lane 1 to new block 13
DEBUG: addUnknownLane - added lane 1 to unknown lanes of block 13
DEBUG: addUnknownLane - adding lane 2 to new block 13
DEBUG: addUnknownLane - added lane 2 to unknown lanes of block 13
DEBUG: addUnknownLane - adding lane 3 to new block 13
DEBUG: addUnknownLane - added lane 3 to unknown lanes of block 13
DEBUG: ForStmt - Lane 0 created iteration starting block 13 for iteration 1
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 13
DEBUG: ForStmt - Lane 0 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 13
DEBUG: WAVE_OP: Resolution status tracked by registry for block 13
DEBUG: Block 13 wave 0 unknown lanes: {1 2 3 }
DEBUG: canExecuteWaveInstruction for lane 0 in block 13: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 0 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 found existing iteration starting block 13 for iteration 1
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 13
DEBUG: ForStmt - Lane 1 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 13
DEBUG: WAVE_OP: Resolution status tracked by registry for block 13
DEBUG: Block 13 wave 0 unknown lanes: {2 3 }
DEBUG: canExecuteWaveInstruction for lane 1 in block 13: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 1 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 found existing iteration starting block 13 for iteration 1
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 13
DEBUG: ForStmt - Lane 2 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 13
DEBUG: WAVE_OP: Resolution status tracked by registry for block 13
DEBUG: Block 13 wave 0 unknown lanes: {3 }
DEBUG: canExecuteWaveInstruction for lane 2 in block 13: canExecuteInBlock=0, allParticipantsKnown=0, allParticipantsArrived=1, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: AssignStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 2 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 found existing iteration starting block 13 for iteration 1
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 13
DEBUG: ForStmt - Lane 3 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 13
DEBUG: WAVE_OP: Resolution status tracked by registry for block 13
DEBUG: Block 13 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 13: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: AssignStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 0, iteration 1
DEBUG: ForStmt - Lane 3 waiting for wave operation in phase 5 at statement 1, iteration 1
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 13 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 13
DEBUG: ForStmt - Lane 0 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 0 body completed in block 13, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 13 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 0 to block 10
DEBUG: assignLaneToBlock - block 10 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 13 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 13
DEBUG: ForStmt - Lane 1 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 1 body completed in block 13, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 13 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 1 to block 10
DEBUG: assignLaneToBlock - block 10 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 13 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 13
DEBUG: ForStmt - Lane 2 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 4 (phase: 2)
DEBUG: ForStmt - Lane 2 body completed in block 13, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 13 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 2 to block 10
DEBUG: assignLaneToBlock - block 10 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 13 (type 0) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 0
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 13 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 13
DEBUG: assignLaneToBlock - block 13 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 13
DEBUG: ForStmt - Lane 3 executing statement 0 in block 13
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 13, instruction key=(0x503000001990,13)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 4 (phase: 3)
DEBUG: ForStmt - Lane 3 body completed in block 13, moving to header block 10 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 13 (type 0) to block 10 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 13
DEBUG: assignLaneToBlock - adding lane 3 to block 10
DEBUG: assignLaneToBlock - block 10 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 10
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 0 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 0 to block 9
DEBUG: assignLaneToBlock - block 9 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 moved to iteration starting block 9
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 1 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 1 to block 9
DEBUG: assignLaneToBlock - block 9 now has 2 participating lanes
DEBUG: ForStmt - Lane 1 moved to iteration starting block 9
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 2 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 2 to block 9
DEBUG: assignLaneToBlock - block 9 now has 3 participating lanes
DEBUG: ForStmt - Lane 2 moved to iteration starting block 9
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: assignLaneToBlock - moving lane 3 from block 10 (type 4) to block 9 (type 0), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 10
DEBUG: assignLaneToBlock - adding lane 3 to block 9
DEBUG: assignLaneToBlock - block 9 now has 4 participating lanes
DEBUG: ForStmt - Lane 3 moved to iteration starting block 9
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 0 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 1 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 2 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 3 child statement needs resume
  Block before: 9, Block after: 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 0 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 0 executing statement 1 in block 9
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 0 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 0 from block 9 (type 0) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 0 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 11 (type 6) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 0 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: ForStmt - Lane 0 natural flow from block 9 to block 11 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 0 body completed in block 11, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 0 from block 11 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 0 to block 2
DEBUG: assignLaneToBlock - block 2 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 1 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 1 executing statement 1 in block 9
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 1 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 1 from block 9 (type 0) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 1 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 11 (type 6) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 1 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 natural flow from block 9 to block 11 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 1 body completed in block 11, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 1 from block 11 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 1 to block 2
DEBUG: assignLaneToBlock - block 2 now has 2 participating lanes
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 2 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 2 executing statement 1 in block 9
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 2 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 2 from block 9 (type 0) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 2 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 11 (type 6) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 2 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: ForStmt - Lane 2 natural flow from block 9 to block 11 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 2 body completed in block 11, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 2 from block 11 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 2 to block 2
DEBUG: assignLaneToBlock - block 2 now has 3 participating lanes
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=2, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase ExecutingBody (stack depth=2, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 executing body for iteration 1 from statement 1
DEBUG: ForStmt - Lane 3 needs iteration block (first statement is not control flow)
DEBUG: ForStmt - Lane 3 executing statement 1 in block 9
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=1, current stack depth=2, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 in phase Reconverging (stack depth=2, our index=1, this=0x5080000027a0)
DEBUG: ForStmt - Lane 3 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 3 from block 9 (type 0) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 9
DEBUG: assignLaneToBlock - adding lane 3 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 11 (type 6) to block 11 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 3 to block 11
DEBUG: assignLaneToBlock - block 11 now has 1 participating lanes
DEBUG: ForStmt - Lane 3 natural flow from block 9 to block 11 during statement 1 (likely merge block)
DEBUG: ForStmt - Lane 3 body completed in block 11, moving to header block 2 for increment
DEBUG: assignLaneToBlock - moving lane 3 from block 11 (type 6) to block 2 (type 4), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 11
DEBUG: assignLaneToBlock - adding lane 3 to block 2
DEBUG: assignLaneToBlock - block 2 now has 4 participating lanes
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase EvaluatingIncrement (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating increment for iteration 1
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 3 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 2
DEBUG: removeThreadFromAllSets - Block 2 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 2 has 3 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 3 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 4 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 4
DEBUG: removeThreadFromAllSets - block 4 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 4
DEBUG: removeThreadFromAllSets - Block 4 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 4 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 5 (child of 4)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 9 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 9
DEBUG: removeThreadFromAllSets - block 9 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 9
DEBUG: removeThreadFromAllSets - Block 9 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 9 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 10 (child of 9)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 0 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 0 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 0 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 2 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 2
DEBUG: removeThreadFromAllSets - Block 2 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 2 has 2 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 3 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 4 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 4
DEBUG: removeThreadFromAllSets - block 4 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 4
DEBUG: removeThreadFromAllSets - Block 4 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 4 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 5 (child of 4)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 9 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 9
DEBUG: removeThreadFromAllSets - block 9 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 9
DEBUG: removeThreadFromAllSets - Block 9 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 9 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 10 (child of 9)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 1 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 1 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 1 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 1 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 2
DEBUG: removeThreadFromAllSets - Block 2 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 2 has 1 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 3 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 4 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 4
DEBUG: removeThreadFromAllSets - block 4 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 4
DEBUG: removeThreadFromAllSets - Block 4 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 4 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 5 (child of 4)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 9 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 9
DEBUG: removeThreadFromAllSets - block 9 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 9
DEBUG: removeThreadFromAllSets - Block 9 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 9 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 10 (child of 9)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 2 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 2 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 2 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase EvaluatingCondition (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 evaluating condition for iteration 2
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 2
DEBUG: removeThreadFromAllSets - block 2 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 2
DEBUG: removeThreadFromAllSets - Block 2 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 2 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 3 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 4 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 4
DEBUG: removeThreadFromAllSets - block 4 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 4
DEBUG: removeThreadFromAllSets - Block 4 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 4 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 5 (child of 4)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 5
DEBUG: removeThreadFromAllSets - block 5 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 5
DEBUG: removeThreadFromAllSets - Block 5 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 5 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 6 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 7 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 7
DEBUG: removeThreadFromAllSets - block 7 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 7
DEBUG: removeThreadFromAllSets - Block 7 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 7 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 8 (child of 5)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 8
DEBUG: removeThreadFromAllSets - block 8 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 8
DEBUG: removeThreadFromAllSets - Block 8 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 8 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 9 (child of 2)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 9
DEBUG: removeThreadFromAllSets - block 9 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 9
DEBUG: removeThreadFromAllSets - Block 9 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 9 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 10 (child of 9)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 10
DEBUG: removeThreadFromAllSets - block 10 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 10
DEBUG: removeThreadFromAllSets - Block 10 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 10 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - skipping 11 (LOOP_EXIT block where lanes should go)
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 12 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 12
DEBUG: removeThreadFromAllSets - block 12 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 12
DEBUG: removeThreadFromAllSets - Block 12 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 12 has 0 participating lanes after removal
DEBUG: removeThreadFromNestedBlocks - removing lane 3 from block 13 (child of 10)
DEBUG: removeThreadFromAllSets - removing lane 3 from all sets of block 13
DEBUG: removeThreadFromAllSets - block 13 had 0 participating lanes before removal
DEBUG: removeUnknownLane - removing lane 3 from unknown lanes of block 13
DEBUG: removeThreadFromAllSets - Block 13 now has all unknowns resolved for wave 0 - checking for ready wave operations
DEBUG: removeThreadFromAllSets - block 13 has 0 participating lanes after removal
DEBUG: ForStmt - Lane 0 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 0 in phase Reconverging (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 0 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 0 from block 2 (type 4) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 0 to block 3
DEBUG: assignLaneToBlock - block 3 now has 1 participating lanes
DEBUG: assignLaneToBlock - moving lane 0 from block 3 (type 6) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 0 from arrivedLanes of block 3
DEBUG: assignLaneToBlock - adding lane 0 to block 3
DEBUG: assignLaneToBlock - block 3 now has 1 participating lanes
DEBUG: ForStmt - Lane 1 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 1 in phase Reconverging (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 1 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 1 from block 2 (type 4) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 1 to block 3
DEBUG: assignLaneToBlock - block 3 now has 2 participating lanes
DEBUG: assignLaneToBlock - moving lane 1 from block 3 (type 6) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 1 from arrivedLanes of block 3
DEBUG: assignLaneToBlock - adding lane 1 to block 3
DEBUG: assignLaneToBlock - block 3 now has 2 participating lanes
DEBUG: ForStmt - Lane 2 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 2 in phase Reconverging (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 2 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 2 from block 2 (type 4) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 2 to block 3
DEBUG: assignLaneToBlock - block 3 now has 3 participating lanes
DEBUG: assignLaneToBlock - moving lane 2 from block 3 (type 6) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 2 from arrivedLanes of block 3
DEBUG: assignLaneToBlock - adding lane 2 to block 3
DEBUG: assignLaneToBlock - block 3 now has 3 participating lanes
DEBUG: ForStmt - Lane 3 resuming execution (found at stack index=0, current stack depth=1, this=0x508000002820)
DEBUG: ForStmt - Lane 3 in phase Reconverging (stack depth=1, our index=0, this=0x508000002820)
DEBUG: ForStmt - Lane 3 exiting loop after 2 iterations
DEBUG: assignLaneToBlock - moving lane 3 from block 2 (type 4) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 2
DEBUG: assignLaneToBlock - adding lane 3 to block 3
DEBUG: assignLaneToBlock - block 3 now has 4 participating lanes
DEBUG: assignLaneToBlock - moving lane 3 from block 3 (type 6) to block 3 (type 6), isHeaderToLoopBody=0
DEBUG: Removed lane 3 from arrivedLanes of block 3
DEBUG: assignLaneToBlock - adding lane 3 to block 3
DEBUG: assignLaneToBlock - block 3 now has 4 participating lanes
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 0 cannot execute, starting to wait in block 3
DEBUG: WAVE_OP: Resolution status tracked by registry for block 3
DEBUG: Block 3 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 0 in block 3: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=0, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: VarDeclStmt - Lane 0 caught WaveOperationWaitException, re-throwing
DEBUG: WAVE_WAIT: Lane 0 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 1 cannot execute, starting to wait in block 3
DEBUG: WAVE_OP: Resolution status tracked by registry for block 3
DEBUG: Block 3 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 1 in block 3: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=0, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: VarDeclStmt - Lane 1 caught WaveOperationWaitException, re-throwing
DEBUG: WAVE_WAIT: Lane 1 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 2 cannot execute, starting to wait in block 3
DEBUG: WAVE_OP: Resolution status tracked by registry for block 3
DEBUG: Block 3 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 2 in block 3: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=0, canExecuteGlobal=0, syncPointPhase=phase_0
DEBUG: VarDeclStmt - Lane 2 caught WaveOperationWaitException, re-throwing
DEBUG: WAVE_WAIT: Lane 2 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 3 cannot execute, starting to wait in block 3
DEBUG: WAVE_OP: Resolution status tracked by registry for block 3
DEBUG: Block 3 wave 0 unknown lanes: {}
DEBUG: areAllParticipantsKnownForWaveInstruction - All participants known for sync point
DEBUG: canExecuteWaveInstruction for lane 3 in block 3: canExecuteInBlock=1, allParticipantsKnown=1, allParticipantsArrived=1, canExecuteGlobal=1, syncPointPhase=phase_1
DEBUG: WAVE_OP: After lane 3 started waiting, wave operation can now execute!
DEBUG: WAVE_OP: Updated sync point - allParticipantsKnown=1, allParticipantsArrived=1, readyToExecute=0
DEBUG: VarDeclStmt - Lane 3 caught WaveOperationWaitException, re-throwing
DEBUG: WAVE_WAIT: Lane 3 caught WaveOperationWaitException, state=2
DEBUG: WAVE_OP: Storing collective result for lanes: 0 1 2 3  (phase: 2)
DEBUG: WAVE_OP: Lane 0 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 0 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 0 retrieving stored wave result: 96 (phase: 2)
DEBUG: WAVE_OP: Lane 1 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 1 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 1 retrieving stored wave result: 96 (phase: 2)
DEBUG: WAVE_OP: Lane 2 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 2 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 2 retrieving stored wave result: 96 (phase: 2)
DEBUG: WAVE_OP: Lane 3 executing WaveActiveSum in block 3, instruction key=(0x503000001a20,3)
DEBUG: WAVE_OP: Lane 3 is resuming from wave operation, checking for stored result
DEBUG: WAVE_OP: Lane 3 retrieving stored wave result: 96 (phase: 3)
lane 0 have completed execution
lane 1 have completed execution
lane 2 have completed execution
lane 3 have completed execution
=== Order Independence Verification ===
✅ PASS: Program is order-independent!
Verified across 1 different thread orderings.

✅ Execution completed successfully!


=== STDERR ===

=== Starting HLSL Parse with AST Ownership ===
File: /home/t-zheychen/dxc_workspace/DirectXShaderCompiler/tools/clang/tools/dxc-fuzzer/examples/control_flow_nest_for.hlsl
About to parse AST directly...
DEBUG: Captured ASTContext pointer: 0x529000000200
DEBUG: Found function: main
DEBUG: Captured main function: 0x521000050508
DEBUG: Analyzing variable reference: i
DEBUG: Variable i is a NamedDecl, checking semantics
DEBUG: Variable i is a VarDecl
DEBUG: Variable i not in cache, analyzing initialization
DEBUG: Variable i has initializer
DEBUG: Analyzing initializer for i
DEBUG: Checking initializer of type: ImplicitCastExpr
DEBUG: After IgnoreImpCasts, type is: IntegerLiteral
DEBUG: Found literal initializer - returning true
DEBUG: Initializer analysis result: deterministic
DEBUG: Cached result for i: deterministic
DEBUG: Analyzing variable reference: j
DEBUG: Variable j is a NamedDecl, checking semantics
DEBUG: Variable j is a VarDecl
DEBUG: Variable j not in cache, analyzing initialization
DEBUG: Variable j has initializer
DEBUG: Analyzing initializer for j
DEBUG: Checking initializer of type: ImplicitCastExpr
DEBUG: After IgnoreImpCasts, type is: IntegerLiteral
DEBUG: Found literal initializer - returning true
DEBUG: Initializer analysis result: deterministic
DEBUG: Cached result for j: deterministic
collect_memory_operations_in_dbeg: Processing CompoundStmt
collect_memory_operations_in_dbeg: Processing DeclStmt
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing DeclStmt
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing ForStmt
collect_memory_operations_in_dbeg: Processing DeclStmt
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing BinaryOperator
  Found BinaryOperator, isAssignmentOp: 0
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing UnaryOperator
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing CompoundStmt
collect_memory_operations_in_dbeg: Processing CompoundAssignOperator
  Found BinaryOperator, isAssignmentOp: 1
  LHS type: DeclRefExpr
    is_shared_memory_access: checking DeclRefExpr
    Found DeclRefExpr
    Variable type: uint
  is_shared_memory_access(lhs): 0
    is_shared_memory_access: checking CallExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing ForStmt
collect_memory_operations_in_dbeg: Processing DeclStmt
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing BinaryOperator
  Found BinaryOperator, isAssignmentOp: 0
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing UnaryOperator
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing CompoundStmt
collect_memory_operations_in_dbeg: Processing CompoundAssignOperator
  Found BinaryOperator, isAssignmentOp: 1
  LHS type: DeclRefExpr
    is_shared_memory_access: checking DeclRefExpr
    Found DeclRefExpr
    Variable type: uint
  is_shared_memory_access(lhs): 0
    is_shared_memory_access: checking CallExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing IntegerLiteral
collect_memory_operations_in_dbeg: Processing DeclStmt
collect_memory_operations_in_dbeg: Processing CallExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_memory_operations_in_dbeg: Processing ImplicitCastExpr
collect_memory_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing CompoundStmt
collect_synchronization_operations_in_dbeg: Processing DeclStmt
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveGetLaneIndex is a barrier operation
Found wave operation: WaveGetLaneIndex
Checking if WaveGetLaneIndex is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing DeclStmt
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing ForStmt
collect_synchronization_operations_in_dbeg: Processing DeclStmt
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing BinaryOperator
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing UnaryOperator
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing CompoundStmt
collect_synchronization_operations_in_dbeg: Processing CompoundAssignOperator
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveActiveSum is a barrier operation
Found wave operation: WaveActiveSum
Checking if WaveActiveSum is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing ForStmt
collect_synchronization_operations_in_dbeg: Processing DeclStmt
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing BinaryOperator
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing UnaryOperator
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing CompoundStmt
collect_synchronization_operations_in_dbeg: Processing CompoundAssignOperator
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveActiveSum is a barrier operation
Found wave operation: WaveActiveSum
Checking if WaveActiveSum is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing IntegerLiteral
collect_synchronization_operations_in_dbeg: Processing DeclStmt
collect_synchronization_operations_in_dbeg: Processing CallExpr
Checking if WaveActiveSum is a barrier operation
Found wave operation: WaveActiveSum
Checking if WaveActiveSum is a barrier operation
Found wave_operation call - adding to DBEG
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
collect_synchronization_operations_in_dbeg: Processing ImplicitCastExpr
collect_synchronization_operations_in_dbeg: Processing DeclRefExpr
Simplified DBEG: Single block with 32 threads and 128 memory operations

=== Cross-Dynamic-Block Analysis ===
Total memory operations: 128
Op 0: Thread 0 in DB0 wave_op
Op 1: Thread 1 in DB0 wave_op
Op 2: Thread 2 in DB0 wave_op
Op 3: Thread 3 in DB0 wave_op
Op 4: Thread 4 in DB0 wave_op
Op 5: Thread 5 in DB0 wave_op
Op 6: Thread 6 in DB0 wave_op
Op 7: Thread 7 in DB0 wave_op
Op 8: Thread 8 in DB0 wave_op
Op 9: Thread 9 in DB0 wave_op
Op 10: Thread 10 in DB0 wave_op
Op 11: Thread 11 in DB0 wave_op
Op 12: Thread 12 in DB0 wave_op
Op 13: Thread 13 in DB0 wave_op
Op 14: Thread 14 in DB0 wave_op
Op 15: Thread 15 in DB0 wave_op
Op 16: Thread 16 in DB0 wave_op
Op 17: Thread 17 in DB0 wave_op
Op 18: Thread 18 in DB0 wave_op
Op 19: Thread 19 in DB0 wave_op
Op 20: Thread 20 in DB0 wave_op
Op 21: Thread 21 in DB0 wave_op
Op 22: Thread 22 in DB0 wave_op
Op 23: Thread 23 in DB0 wave_op
Op 24: Thread 24 in DB0 wave_op
Op 25: Thread 25 in DB0 wave_op
Op 26: Thread 26 in DB0 wave_op
Op 27: Thread 27 in DB0 wave_op
Op 28: Thread 28 in DB0 wave_op
Op 29: Thread 29 in DB0 wave_op
Op 30: Thread 30 in DB0 wave_op
Op 31: Thread 31 in DB0 wave_op
Op 32: Thread 0 in DB0 wave_op
Op 33: Thread 1 in DB0 wave_op
Op 34: Thread 2 in DB0 wave_op
Op 35: Thread 3 in DB0 wave_op
Op 36: Thread 4 in DB0 wave_op
Op 37: Thread 5 in DB0 wave_op
Op 38: Thread 6 in DB0 wave_op
Op 39: Thread 7 in DB0 wave_op
Op 40: Thread 8 in DB0 wave_op
Op 41: Thread 9 in DB0 wave_op
Op 42: Thread 10 in DB0 wave_op
Op 43: Thread 11 in DB0 wave_op
Op 44: Thread 12 in DB0 wave_op
Op 45: Thread 13 in DB0 wave_op
Op 46: Thread 14 in DB0 wave_op
Op 47: Thread 15 in DB0 wave_op
Op 48: Thread 16 in DB0 wave_op
Op 49: Thread 17 in DB0 wave_op
Op 50: Thread 18 in DB0 wave_op
Op 51: Thread 19 in DB0 wave_op
Op 52: Thread 20 in DB0 wave_op
Op 53: Thread 21 in DB0 wave_op
Op 54: Thread 22 in DB0 wave_op
Op 55: Thread 23 in DB0 wave_op
Op 56: Thread 24 in DB0 wave_op
Op 57: Thread 25 in DB0 wave_op
Op 58: Thread 26 in DB0 wave_op
Op 59: Thread 27 in DB0 wave_op
Op 60: Thread 28 in DB0 wave_op
Op 61: Thread 29 in DB0 wave_op
Op 62: Thread 30 in DB0 wave_op
Op 63: Thread 31 in DB0 wave_op
Op 64: Thread 0 in DB0 wave_op
Op 65: Thread 1 in DB0 wave_op
Op 66: Thread 2 in DB0 wave_op
Op 67: Thread 3 in DB0 wave_op
Op 68: Thread 4 in DB0 wave_op
Op 69: Thread 5 in DB0 wave_op
Op 70: Thread 6 in DB0 wave_op
Op 71: Thread 7 in DB0 wave_op
Op 72: Thread 8 in DB0 wave_op
Op 73: Thread 9 in DB0 wave_op
Op 74: Thread 10 in DB0 wave_op
Op 75: Thread 11 in DB0 wave_op
Op 76: Thread 12 in DB0 wave_op
Op 77: Thread 13 in DB0 wave_op
Op 78: Thread 14 in DB0 wave_op
Op 79: Thread 15 in DB0 wave_op
Op 80: Thread 16 in DB0 wave_op
Op 81: Thread 17 in DB0 wave_op
Op 82: Thread 18 in DB0 wave_op
Op 83: Thread 19 in DB0 wave_op
Op 84: Thread 20 in DB0 wave_op
Op 85: Thread 21 in DB0 wave_op
Op 86: Thread 22 in DB0 wave_op
Op 87: Thread 23 in DB0 wave_op
Op 88: Thread 24 in DB0 wave_op
Op 89: Thread 25 in DB0 wave_op
Op 90: Thread 26 in DB0 wave_op
Op 91: Thread 27 in DB0 wave_op
Op 92: Thread 28 in DB0 wave_op
Op 93: Thread 29 in DB0 wave_op
Op 94: Thread 30 in DB0 wave_op
Op 95: Thread 31 in DB0 wave_op
Op 96: Thread 0 in DB0 wave_op
Op 97: Thread 1 in DB0 wave_op
Op 98: Thread 2 in DB0 wave_op
Op 99: Thread 3 in DB0 wave_op
Op 100: Thread 4 in DB0 wave_op
Op 101: Thread 5 in DB0 wave_op
Op 102: Thread 6 in DB0 wave_op
Op 103: Thread 7 in DB0 wave_op
Op 104: Thread 8 in DB0 wave_op
Op 105: Thread 9 in DB0 wave_op
Op 106: Thread 10 in DB0 wave_op
Op 107: Thread 11 in DB0 wave_op
Op 108: Thread 12 in DB0 wave_op
Op 109: Thread 13 in DB0 wave_op
Op 110: Thread 14 in DB0 wave_op
Op 111: Thread 15 in DB0 wave_op
Op 112: Thread 16 in DB0 wave_op
Op 113: Thread 17 in DB0 wave_op
Op 114: Thread 18 in DB0 wave_op
Op 115: Thread 19 in DB0 wave_op
Op 116: Thread 20 in DB0 wave_op
Op 117: Thread 21 in DB0 wave_op
Op 118: Thread 22 in DB0 wave_op
Op 119: Thread 23 in DB0 wave_op
Op 120: Thread 24 in DB0 wave_op
Op 121: Thread 25 in DB0 wave_op
Op 122: Thread 26 in DB0 wave_op
Op 123: Thread 27 in DB0 wave_op
Op 124: Thread 28 in DB0 wave_op
Op 125: Thread 29 in DB0 wave_op
Op 126: Thread 30 in DB0 wave_op
Op 127: Thread 31 in DB0 wave_op
SIMPLIFIED VALIDATION: Focusing on control flow determinism
Complex DBEG analysis disabled - moved to interpreter
Direct ParseAST complete
=== HLSL Parse with AST Ownership Complete ===
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x5030000018d0 block 4
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001990 block 7
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001990 block 8
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x5030000018d0 block 9
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001990 block 12
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001990 block 13
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001a20 block 3
Collective wave operation result: 96
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
Waking up lanes to retrieve wave operation results for wave 0
Waking up lanes to retrieve wave operation results for wave 0

=== Dynamic Execution Graph (MiniHLSL Interpreter) ===
Threadgroup Size: 4
Wave Size: 32
Wave Count: 1
Total Dynamic Blocks: 13
Next Block ID: 14

Dynamic Block 1:
  Block ID: 1
  Block Type: REGULAR
  Parent Block: 0
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 2:
  Block ID: 2
  Block Type: LOOP_HEADER
  Parent Block: 1
  Program Point: 0
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x508000002820
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 3:
  Block ID: 3
  Block Type: LOOP_EXIT
  Parent Block: 2
  Program Point: 0
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x508000002820
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Waiting Lanes by Wave:
    Wave 0: {0, 1, 2, 3} (4 lanes)
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001a20)

Dynamic Block 4:
  Block ID: 4
  Block Type: REGULAR
  Parent Block: 2
  Program Point: 0
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x508000005820
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x5030000018d0)

Dynamic Block 5:
  Block ID: 5
  Block Type: LOOP_HEADER
  Parent Block: 4
  Program Point: 0
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 6:
  Block ID: 6
  Block Type: LOOP_EXIT
  Parent Block: 5
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 7:
  Block ID: 7
  Block Type: REGULAR
  Parent Block: 5
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000057a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001990)

Dynamic Block 8:
  Block ID: 8
  Block Type: REGULAR
  Parent Block: 5
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000157a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001990)

Dynamic Block 9:
  Block ID: 9
  Block Type: REGULAR
  Parent Block: 2
  Program Point: 0
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x508000015820
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x5030000018d0)

Dynamic Block 10:
  Block ID: 10
  Block Type: LOOP_HEADER
  Parent Block: 9
  Program Point: 0
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 11:
  Block ID: 11
  Block Type: LOOP_EXIT
  Parent Block: 10
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 12:
  Block ID: 12
  Block Type: REGULAR
  Parent Block: 10
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000057a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001990)

Dynamic Block 13:
  Block ID: 13
  Block Type: REGULAR
  Parent Block: 10
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000157a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001990)

=== Wave States ===
Wave 0:
  Wave Size: 32
  Lane Count: 4
  Active Lanes: 4
  Currently Active Lanes: 4
  Lane to Block Mapping:
    Lane 0 -> Block 3
    Lane 1 -> Block 3
    Lane 2 -> Block 3
    Lane 3 -> Block 3
  Active Sync Points (7):
    Instruction 0x5030000018d0 block 4 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x5030000018d0 block 9 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x503000001990 block 7 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x503000001990 block 8 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x503000001990 block 12 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x503000001990 block 13 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x503000001a20 block 3 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No

=== End Dynamic Execution Graph ===


=== Final Variable Values ===
Wave 0:
  Lane 0:
    i = 2
    j = 2
    laneId = 0
    result = 24
    totalSum = 96
    (state: Completed)
  Lane 1:
    i = 2
    j = 2
    laneId = 1
    result = 24
    totalSum = 96
    (state: Completed)
  Lane 2:
    i = 2
    j = 2
    laneId = 2
    result = 24
    totalSum = 96
    (state: Completed)
  Lane 3:
    i = 2
    j = 2
    laneId = 3
    result = 24
    totalSum = 96
    (state: Completed)
=== End Variable Values ===

  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x5030000018d0 block 4
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001990 block 7
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001990 block 8
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x5030000018d0 block 9
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001990 block 12
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001990 block 13
Collective wave operation result: 4
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 1 from WaitingForResume to Ready
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
  Waking up lane 0 from WaitingForResume to Ready
  Waking up lane 1 from WaitingForResume to Ready
  Waking up lane 2 from WaitingForResume to Ready
  Waking up lane 3 from WaitingForResume to Ready
Executing collective wave operation for wave 0 at instruction 0x503000001a20 block 3
Collective wave operation result: 96
Waking up lanes to retrieve wave operation results for wave 0
  Waking up lane 0 from WaitingForWave to Ready
  Waking up lane 1 from WaitingForWave to Ready
  Waking up lane 2 from WaitingForWave to Ready
  Waking up lane 3 from WaitingForWave to Ready
Waking up lanes to retrieve wave operation results for wave 0
Waking up lanes to retrieve wave operation results for wave 0
Waking up lanes to retrieve wave operation results for wave 0

=== Dynamic Execution Graph (MiniHLSL Interpreter) ===
Threadgroup Size: 4
Wave Size: 32
Wave Count: 1
Total Dynamic Blocks: 13
Next Block ID: 14

Dynamic Block 1:
  Block ID: 1
  Block Type: REGULAR
  Parent Block: 0
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 2:
  Block ID: 2
  Block Type: LOOP_HEADER
  Parent Block: 1
  Program Point: 3563093592
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x508000002820
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 3:
  Block ID: 3
  Block Type: LOOP_EXIT
  Parent Block: 2
  Program Point: 0
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x508000002820
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Waiting Lanes by Wave:
    Wave 0: {0, 1, 2, 3} (4 lanes)
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001a20)

Dynamic Block 4:
  Block ID: 4
  Block Type: REGULAR
  Parent Block: 2
  Program Point: 0
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x508000005820
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x5030000018d0)

Dynamic Block 5:
  Block ID: 5
  Block Type: LOOP_HEADER
  Parent Block: 4
  Program Point: 0
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 6:
  Block ID: 6
  Block Type: LOOP_EXIT
  Parent Block: 5
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 7:
  Block ID: 7
  Block Type: REGULAR
  Parent Block: 5
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000057a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001990)

Dynamic Block 8:
  Block ID: 8
  Block Type: REGULAR
  Parent Block: 5
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000157a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001990)

Dynamic Block 9:
  Block ID: 9
  Block Type: REGULAR
  Parent Block: 2
  Program Point: 0
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x508000015820
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x5030000018d0)

Dynamic Block 10:
  Block ID: 10
  Block Type: LOOP_HEADER
  Parent Block: 9
  Program Point: 0
  Is Converged: Yes
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 11:
  Block ID: 11
  Block Type: LOOP_EXIT
  Parent Block: 10
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000027a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0

Dynamic Block 12:
  Block ID: 12
  Block Type: REGULAR
  Parent Block: 10
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000057a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001990)

Dynamic Block 13:
  Block ID: 13
  Block Type: REGULAR
  Parent Block: 10
  Program Point: 0
  Is Converged: No
  Nesting Level: 0
  Source Statement: 0x5080000157a0
  Participating Lanes by Wave:
    Wave 0: {} (0 lanes)
  Total Participating Lanes: 0
  Instructions (1):
    0: WaveActiveOp (ptr: 0x503000001990)

=== Wave States ===
Wave 0:
  Wave Size: 32
  Lane Count: 4
  Active Lanes: 4
  Currently Active Lanes: 4
  Lane to Block Mapping:
    Lane 0 -> Block 3
    Lane 1 -> Block 3
    Lane 2 -> Block 3
    Lane 3 -> Block 3
  Active Sync Points (7):
    Instruction 0x5030000018d0 block 4 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x5030000018d0 block 9 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x503000001990 block 7 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x503000001990 block 8 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x503000001990 block 12 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x503000001990 block 13 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No
    Instruction 0x503000001a20 block 3 (WaveActiveOp):
      Expected: 4 lanes
      Arrived: 4 lanes
      Ready to execute: No

=== End Dynamic Execution Graph ===


=== Final Variable Values ===
Wave 0:
  Lane 0:
    i = 2
    j = 2
    laneId = 0
    result = 24
    totalSum = 96
    (state: Completed)
  Lane 1:
    i = 2
    j = 2
    laneId = 1
    result = 24
    totalSum = 96
    (state: Completed)
  Lane 2:
    i = 2
    j = 2
    laneId = 2
    result = 24
    totalSum = 96
    (state: Completed)
  Lane 3:
    i = 2
    j = 2
    laneId = 3
    result = 24
    totalSum = 96
    (state: Completed)
=== End Variable Values ===



=== VERIFICATION ===
✅ totalSum: 96 (found 8 instances)

